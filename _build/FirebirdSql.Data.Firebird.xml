<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FirebirdSql.Data.Firebird</name>
    </assembly>
    <members>
        <member name="T:FirebirdSql.Data.Common.Descriptor">
            <summary>
            Descriptor of query input and output parameters.
            </summary>
            <remarks>
            This is similar to the XSQLDA structure described 
            in the Interbase 6.0 API docs.
            </remarks>
        </member>
        <member name="M:FirebirdSql.Data.Gds.GdsDatabase.DatabaseInfo(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            isc_database_info
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Design.FbCommandDesigner">
            <summary>
            Designer for the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> class.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbCommandDesigner.#ctor">
            <summary>
            Initializes	a new Instance of the <b>FbCommandDesigner</b> class.
            </summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Design.FbCommandDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the	component that is associated with the designer.
            </summary>
            <value>
            A DesignerVerbCollection of	DesignerVerb objects, or null if no	designer verbs are available. 
            </value>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.DataSetGenerator.GenerateDataset(FirebirdSql.Data.Firebird.FbDataAdapter,System.String,System.Boolean)">
            <summary>
            Generates a	DataSet	using the given	<see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>
            </summary>
            <param name="adapter">A <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> objects.</param>
            <param name="name">The DataSet name.</param>
            <param name="properCase">Indicates wheter table	and	columns	names should be	generated using	a proper case.</param>
            <returns>A DataSet object.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.DataSetGenerator.GenerateDataset(System.String,System.Collections.ArrayList,System.String,System.Boolean)">
            <summary>
            Generates a	DataSet	using the given	connection string and tables.
            </summary>
            <param name="connectionString">A connection	string.</param>
            <param name="tables">The list of tables	to add to the DataSet.</param>
            <param name="name">The DataSet name.</param>
            <param name="properCase">Indicates wheter table	and	columns	names should be	generated using	a proper case.</param>
            <returns>A DataSet object.</returns>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep1">
            <summary>
            Step 1 of the Firebird Data	Adapter	Configuration Wizard
            </summary>
        </member>
        <member name="T:FirebirdSql.WizardFramework.WizardStep">
            <summary>
            Represents an step of a	Wizard.
            </summary>
        </member>
        <member name="F:FirebirdSql.WizardFramework.WizardStep.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStep.#ctor">
            <summary>
            Initializes	a new instance of the <b>WizardStep</b>	class.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStep.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStep.ShowStep">
            <summary>
            Perform	the	necessary operations before	the	step gets shown	in the Wizard.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStep.HideStep">
            <summary>
            Perform	the	necessary operations before	the	step gets hidden in	the	Wizard.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStep.IsValid">
            <summary>
            Performs the step validations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStep.SaveSettings">
            <summary>
            Saves step settings.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStep.PerformValidation">
            <summary>
            Performs step validation
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStep.GetBackStep">
            <summary>
            Returns	the	back step to navigate to.
            </summary>
            <returns>A <see cref="T:FirebirdSql.WizardFramework.WizardStep"/>	object.</returns>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStep.GetNextStep">
            <summary>
            Returns	the	next step to navigate to.
            </summary>
            <returns>A <see cref="T:FirebirdSql.WizardFramework.WizardStep"/>	object.</returns>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStep.InitializeComponent">
            <summary> 
            Required method	for	Designer support - do not modify 
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardStep.CanMoveBack">
            <summary>
            Gets a value that indicates	wheter the panel can navigate back to the
            previous panel.
            </summary>
            <value></value>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardStep.CanMoveNext">
            <summary>
            Gets a value that indicates	wheter the panel can navigate to the
            next panel.
            </summary>
            <value></value>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardStep.CanFinish">
            <summary>
            Gets a value that indicates	wheter the panel should	allow navigation to
            the	final panel.
            </summary>
            <value></value>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardStep.CanCancel">
            <summary>
            Gets a value that indicates	if the wizard can be canceled.
            </summary>
            <value></value>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardStep.PreviousStep">
            <summary>
            Gets or	the	return back	step.
            </summary>
            <value>The previous	step to	navigate to.</value>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardStep.NextStep">
            <summary>
            Gets the next step.
            </summary>
            <value>The next	step to	navigate to.</value>
            <remarks>By	default	it will	return always the step with	index 0	in the collection of <see cref="P:FirebirdSql.WizardFramework.WizardStep.NextSteps">Next Steps</see></remarks>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardStep.NextSteps">
            <summary>
            Gets the collection	of steps that the current step can navigate	to.
            </summary>
            <value>An <see cref="T:FirebirdSql.WizardFramework.WizardStepCollection"/> object.</value>
            <remarks>This collection handles the steps we can navigate to througth the next	buttong	of a Wizard.</remarks>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardStep.BackSteps">
            <summary>
            Gets the collection	of steps that the current step can navigate	to.
            </summary>
            <value>An <see cref="T:FirebirdSql.WizardFramework.WizardStepCollection"/> object.</value>
            <remarks>This collection handles the steps we can navigate to througth the next	buttong	of a Wizard.</remarks>
        </member>
        <member name="F:FirebirdSql.WizardFramework.WelcomeStep.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WelcomeStep.#ctor">
            <summary>
            Initializes	a new instance of the <b>WelcomeStep</b> class.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WelcomeStep.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WelcomeStep.InitializeComponent">
            <summary> 
            Required method	for	Designer support - do not modify 
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep1.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep1.#ctor">
            <summary>
            Initializes	a new instance of the <b>FbDataAdapterConfigurationStep1</b> class.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep1.InitializeComponent">
            <summary> 
            Required method	for	Designer support - do not modify 
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep1.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep2">
            <summary>
            Step 2 of the Firebird Data	Adapter	Configuration Wizard
            </summary>
        </member>
        <member name="F:FirebirdSql.WizardFramework.ActionStep.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.ActionStep.#ctor">
            <summary>
            Initializes	a new instance of the <b>ActionStep</b>	class.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.ActionStep.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.ActionStep.InitializeComponent">
            <summary> 
            Required method	for	Designer support - do not modify 
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep2.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep2.#ctor">
            <summary>
            Initializes	a new instance of the <b>WizardStep</b>	class.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep2.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep2.ShowStep">
            <summary>
            Shows the step in thw wizard
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep2.IsValid">
            <summary>
            Performs the step validations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep2.InitializeComponent">
            <summary> 
            Required method	for	Designer support - do not modify 
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep3">
            <summary>
            Step 3 of the Firebird Data	Adapter	Configuration Wizard
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep3.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep3.#ctor">
            <summary>
            Initializes	a new instance of the <b>WizardStep</b>	class.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep3.InitializeComponent">
            <summary> 
            Required method	for	Designer support - do not modify 
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep3.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep4">
            <summary>
            Step 4 of the Firebird Data	Adapter	Configuration Wizard
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep4.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep4.#ctor">
            <summary>
            Initializes	a new instance of the <b>WizardStep</b>	class.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep4.InitializeComponent">
            <summary> 
            Required method	for	Designer support - do not modify 
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep4.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep4.ShowStep">
            <summary>
            Shows the step in the wizard
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep4.IsValid">
            <summary>
            Performs the step validations.
            </summary>
            <returns></returns>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep5">
            <summary>
            Step 5 of the Firebird Data	Adapter	Configuration Wizard
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep5.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep5.#ctor">
            <summary>
            Initializes	a new instance of the <b>WizardStep</b>	class.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep5.InitializeComponent">
            <summary> 
            Required method	for	Designer support - do not modify 
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep5.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep5.ShowStep">
            <summary>
            Shows the step in the wizard
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep5.IsValid">
            <summary>
            Performs the step validations.
            </summary>
            <returns></returns>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep6">
            <summary>
            Step 6 of the Firebird Data	Adapter	Configuration Wizard
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep6.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep6.#ctor">
            <summary>
            Initializes	a new instance of the <b>WizardStep</b>	class.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep6.InitializeComponent">
            <summary> 
            Required method	for	Designer support - do not modify 
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep6.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep6.ShowStep">
            <summary>
            Shows the step in the wizard
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep6.SaveSettings">
            <summary>
            Saves step settings
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep7">
            <summary>
            Step 7 of the Firebird Data	Adapter	Configuration Wizard
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep7.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep7.#ctor">
            <summary>
            Initializes	a new instance of the <b>WizardStep</b>	class.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep7.InitializeComponent">
            <summary> 
            Required method	for	Designer support - do not modify 
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep7.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationStep7.IsValid">
            <summary>
            Performs the step validations.
            </summary>
            <returns></returns>
        </member>
        <member name="T:FirebirdSql.WizardFramework.WizardForm">
            <summary>
            Represents the base	form for Wizard	implementations.
            </summary>
        </member>
        <member name="F:FirebirdSql.WizardFramework.WizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardForm.#ctor">
            <summary>
            Initializes	a new instance of the <b>WizardForm</b>	class.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardForm.InitializeComponent">
            <summary>
            Required method	for	Designer support - do not modify
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardForm.InitializeWizard">
            <summary>
            Initializes	the	Wizard.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardForm.ShowStep(FirebirdSql.WizardFramework.WizardStep)">
            <summary>
            Shows the specified	step in	the	Wizard.
            </summary>
            <param name="step">The <see cref="T:FirebirdSql.WizardFramework.WizardStep"/> to	show.</param>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardForm.GetCurrentStep">
            <summary>
            Returns	the	current	step.
            </summary>
            <returns>A <see cref="T:FirebirdSql.WizardFramework.WizardStep"/> object.</returns>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardForm.GetPreviousStep">
            <summary>
            Returns	the	previous step.
            </summary>
            <returns>A <see cref="T:FirebirdSql.WizardFramework.WizardStep"/> object.</returns>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardForm.GetNextStep">
            <summary>
            Returns	the	next step.
            </summary>
            <returns>A <see cref="T:FirebirdSql.WizardFramework.WizardStep"/> object.</returns>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardForm.GetStepIndex(FirebirdSql.WizardFramework.WizardStep)">
            <summary>
            Returns	the	zero-based index of	the	given step..
            </summary>
            <param name="step">A <see cref="T:FirebirdSql.WizardFramework.WizardStep"/> object.</param>
            <returns>The zero-based	index of the step.</returns>
        </member>
        <member name="E:FirebirdSql.WizardFramework.WizardForm.Initialize">
            <summary>
            Occurs during the wizard initialization.
            </summary>
        </member>
        <member name="E:FirebirdSql.WizardFramework.WizardForm.LoadSteps">
            <summary>
            Occurs during the wizard initialization.
            </summary>
            <remarks>The event allows to define	the	steps that will	be used	in the wizard.</remarks>
        </member>
        <member name="E:FirebirdSql.WizardFramework.WizardForm.BeforeCancel">
            <summary>
            Occurs before the <b>Cancel</b>	button is clicked.
            </summary>
        </member>
        <member name="E:FirebirdSql.WizardFramework.WizardForm.BeforeMoveBack">
            <summary>
            Occurs before the <b>Back</b> button is	clicked.
            </summary>
        </member>
        <member name="E:FirebirdSql.WizardFramework.WizardForm.BeforeMoveNext">
            <summary>
            Occurs before the <b>Next</b> button is	clicked.
            </summary>
        </member>
        <member name="E:FirebirdSql.WizardFramework.WizardForm.BeforeFinish">
            <summary>
            Occurs before the <b>Finish</b>	button is clicked.
            </summary>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardForm.Steps">
            <summary>
            Gets the collection	of steps that will be used in the Wizard.
            </summary>
            <value></value>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardForm.StepIndex">
            <summary>
            Gets the zero-based	index of the current step.
            </summary>
            <value></value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationWizard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationWizard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterConfigurationWizard.InitializeComponent">
            <summary>
            Required method	for	Designer support - do not modify
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Design.FbDataAdapterDataSetGenerator.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterDataSetGenerator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterDataSetGenerator.InitializeComponent">
            <summary>
            Required method	for	Designer support - do not modify
            the	contents of	this method	with the code editor.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Design.FbDataAdapterDesigner">
            <summary>
            Designer for the <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> class.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterDesigner.#ctor">
            <summary>
            Initializes	a new Instance of the <b>FbDataAdapterDesigner</b> class.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterDesigner.OnConfigureDataAdapter(System.Object,System.EventArgs)">
            <summary>
            Handles the "Configure Data Adapter" designer option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Design.FbDataAdapterDesigner.OnGenerateTypeDataSet(System.Object,System.EventArgs)">
            <summary>
            Handles	the	"Generate Type DataSet"	designer option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Design.FbDataAdapterDesigner.DataAdapter">
            <summary>
            Gets the Designer Component	as a FbDataAdapter instance.
            </summary>
            <value>An <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> object</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Design.FbDataAdapterDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the	component that is associated with the designer.
            </summary>
            <value>
            A DesignerVerbCollection of	DesignerVerb objects, or null if no	designer verbs are available. 
            </value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Isql.CommandExecutedEventHandler">
            <summary>
            The event handler type trigged after a SQL statement execution.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Isql.CommandExecutedEventArgs">
            <summary>
            Summary description for CommandExecutedEventArgs.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.CommandExecutedEventArgs.#ctor(FirebirdSql.Data.Firebird.FbDataReader,System.String,System.Int32)">
            <summary>
            Creates an instance of CommandExecutedEventArgs class.
            </summary>
            <param name="dataReader"></param>
            <param name="commandText">The CommandText of the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> that was executed.</param>
            <param name="rowsAffected"></param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.CommandExecutedEventArgs.ToString">
            <summary>
            Overrided. Returns the SQL statement that was executed.
            </summary>
            <returns>The SQL statement that will be executed.</returns>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.CommandExecutedEventArgs.StatementType">
            <summary>
            Returns the <see cref="T:FirebirdSql.Data.Firebird.Isql.SqlStatementType"/> of the current <see cref="P:FirebirdSql.Data.Firebird.Isql.CommandExecutedEventArgs.CommandText"/>.
            </summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.CommandExecutedEventArgs.CommandText">
            <summary>
            Returns the SQL statement that was executed.
            </summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.CommandExecutedEventArgs.DataReader">
            <summary>
            Returns a <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> instance case the executed SQL command returns data. If
            the executed SQL command does not returns data, (for instance: the case of an UPDATE statement), 
            the <b>DataReader</b> is setled to <b>null</b>.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Isql.CommandExecutingEventHandler">
            <summary>
            The	event handler type trigged before a	SQL	statement execution.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Isql.CommandExecutingEventArgs">
            <summary>
            CommandExecutingEventArgs encapsulates the events arguments	for	the	event trigged 
            from the <see cref="T:FirebirdSql.Data.Firebird.Isql.FbBatchExecution"/>	during the execution. 
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.CommandExecutingEventArgs.#ctor(FirebirdSql.Data.Firebird.FbCommand)">
            <summary>
            Creates	an instance	of CommandExecutingEventArgs class.
            </summary>
            <param name="sqlCommand">The FbCommand properly	instanciated.</param>
            <remarks>The <b>sqlCommand</b> should be proper	instanciated with a	valid 
            <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> and with the SQL statement loaded in <see cref="P:FirebirdSql.Data.Firebird.FbCommand.CommandText"/>.
            </remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.CommandExecutingEventArgs.ToString">
            <summary>
            Overrided. Returns the SQL statement that goes for execution.
            </summary>
            <returns>The SQL statement that	will be	executed.</returns>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.CommandExecutingEventArgs.SqlCommand">
            <summary>
            Returns	the	<see cref="T:FirebirdSql.Data.Firebird.FbCommand"/>	instance that created for the SQL statement	that goes 
            for	execution. 
            </summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.CommandExecutingEventArgs.StatementType">
            <summary>
            Returns	the	<see cref="T:FirebirdSql.Data.Firebird.Isql.SqlStatementType"/> of the current <see cref="P:FirebirdSql.Data.Firebird.Isql.CommandExecutingEventArgs.SqlCommand"/>.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Isql.FbBatchExecution">
            <summary>
            Performs batch execution of ISQL commands.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.#ctor">
            <summary>
            Creates	an instance	of FbBatchExecution	engine.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.#ctor(FirebirdSql.Data.Firebird.FbConnection)">
            <summary>
            Creates	an instance	of FbBatchExecution	engine with	the	given
            connection.
            </summary>
            <param name="sqlConnection">A <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> object.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.Execute">
            <summary>
            Starts the ordered execution of	the	SQL	statements that	are	in <see cref="P:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.SqlStatements"/> collection.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.Execute(System.Boolean)">
            <summary>
            Starts the ordered execution of	the	SQL	statements that	are	in <see cref="P:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.SqlStatements"/> collection.
            </summary>
            <param name="autoCommit">Specifies if the transaction should be	committed after	a DDL command execution</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.ConnectToDatabase(System.String)">
            <summary>
            Updates	the	connection string with the data	parsed from	the parameter and opens	a connection
            to the database.
            </summary>
            <param name="connectDbStatement"></param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.CreateDatabase(System.String)">
            <summary>
            Parses the isql	statement CREATE DATABASE and creates the database and opens a connection to the recently created database.
            </summary>
            <param name="createDbStatement">the	create database	statement.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.SetDatabase(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.ProvideConnection">
            <summary>
            Gets a <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> instance.
            </summary>
            <returns>An instance of the <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> class.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.ProvideCommand">
            <summary>
            Gets a <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> instance.
            </summary>
            <returns>An instance of the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> class.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.ExecuteCommand(FirebirdSql.Data.Firebird.FbCommand,System.Boolean)">
            <summary>
            Executes a command and optionally commits the transaction.
            </summary>
            <param name="command">Command to execute.</param>
            <param name="autocommit">true to commit	the	transaction	after execution; or	false if not.</param>
            <returns>The number	of rows	affected by the	query execution.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.OnCommandExecuting(FirebirdSql.Data.Firebird.FbCommand)">
            <summary>
            The	trigger	function for <see cref="E:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.CommandExecuting"/>	event.
            </summary>
            <param name="sqlCommand">The SQL command that is going for execution.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.OnCommandExecuted(System.String,FirebirdSql.Data.Firebird.FbDataReader,System.Int32)">
            <summary>
            The	trigger	function for <see cref="E:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.CommandExecuted"/> event.
            </summary>
            <param name="commandText">The <see cref="P:FirebirdSql.Data.Firebird.FbCommand.CommandText"/> of the executed SQL command.</param>
            <param name="dataReader">The <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/>	instance with the returned data. If	the	
            command	executed is	not	meant to return	data (ex: UPDATE, INSERT...) this parameter	must be	
            setled to <b>null</b>.</param>
            <param name="rowsAffected">The rows	that were affected by the executed SQL command.	If the executed	
            command	is not meant to	return this	kind of	information	(ex: SELECT) this parameter	must 
            be setled to <b>-1</b>.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.GetStatementType(System.String)">
            <summary>
            Determines the <see cref="T:FirebirdSql.Data.Firebird.Isql.SqlStatementType"/> of the provided SQL statement.
            </summary>
            <param name="sqlStatement">The string containing the SQL statement.</param>
            <returns>The <see cref="T:FirebirdSql.Data.Firebird.Isql.SqlStatementType"/>	of the <b>sqlStatement</b>.</returns>
            <remarks>If	the	type of	<b>sqlStatement</b>	could not be determinated this 
            method will	throw an exception.</remarks>
        </member>
        <member name="E:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.CommandExecuting">
            <summary>
            The	event trigged before a SQL statement goes for execution.
            </summary>
        </member>
        <member name="E:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.CommandExecuted">
            <summary>
            The	event trigged after	a SQL statement	execution.
            </summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.FbBatchExecution.SqlStatements">
            <summary>
            Represents the list	of SQL statements for batch	execution.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Isql.FbScript">
            <summary>
            FbScript parses a SQL file and returns its SQL statements. 
            The class take in consideration that the statement separator can change in code. 
            For instance, in Firebird databases the statement <c>SET TERM !! ;</c> will change the
            statement token terminator <b>;</b> into <b>!!</b>.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbScript.#ctor(System.String)">
            <summary>
            Creates an instance of FbScript class.
            </summary>
            <param name="sqlFilename">The filename for the SQL file.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbScript.#ctor(System.IO.TextReader)">
            <summary>
            Creates an instance of FbScript class.
            </summary>
            <param name="sqlCode">A <see cref="T:System.IO.TextReader"/> instance.</param>
            <remarks>The all data in <see cref="T:System.IO.TextReader"/> is read.</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbScript.Parse">
            <summary>
            Parses the SQL code and loads the SQL statements into the StringCollection <see cref="P:FirebirdSql.Data.Firebird.Isql.FbScript.Results"/>.
            </summary>
            <returns>The number of statements found.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbScript.ToString">
            <summary>
            Overrided method, returns the the SQL code to be parsed (with comments removed).
            </summary>
            <returns>The SQL code to be parsed (without comments).</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.FbScript.RemoveComments(System.String)">
            <summary>
            Removes from the SQL code all comments of the type: /*...*/ or --
            </summary>
            <param name="source">The string containing the original SQL code.</param>
            <returns>A string containing the SQL code without comments.</returns>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.FbScript.Results">
            <summary>
            Returns a StringCollection containing all the SQL statements (without comments) present on the file.
            This property is loaded after the method call <see cref="M:FirebirdSql.Data.Firebird.Isql.FbScript.Parse"/>.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Isql.SqlStatementType">
            <summary>
            DSQL and ISQL statement types.
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.AlterDatabase">
            <summary>
            Represents the SQL statement: <b>ALTER DATABASE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.AlterDomain">
            <summary>
            Represents the SQL statement: <b>ALTER DOMAIN</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.AlterException">
            <summary>
            Represents the SQL statement: <b>ALTER EXCEPTION</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.AlterIndex">
            <summary>
            Represents the SQL statement: <b>ALTER INDEX</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.AlterProcedure">
            <summary>
            Represents the SQL statement: <b>ALTER PROCEDURE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.AlterTable">
            <summary>
            Represents the SQL statement: <b>ALTER TABLE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.AlterTrigger">
            <summary>
            Represents the SQL statement: <b>ALTER TRIGGER</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Close">
            <summary>
            Represents the SQL statement: <b>CLOSE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Commit">
            <summary>
            Represents the SQL statement: <b>COMMIT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Connect">
            <summary>
            Represents the SQL statement: <b>CONNECT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateDatabase">
            <summary>
            Represents the SQL statement: <b>CREATE	DATABASE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateDomain">
            <summary>
            Represents the SQL statement: <b>CREATE	DOMAIN</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateException">
            <summary>
            Represents the SQL statement: <b>CREATE	EXCEPTION</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateGenerator">
            <summary>
            Represents the SQL statement: <b>CREATE	GENERATOR</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateIndex">
            <summary>
            Represents the SQL statement: <b>CREATE	INDEX</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateProcedure">
            <summary>
            Represents the SQL statement: <b>CREATE	PROCEDURE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateRole">
            <summary>
            Represents the SQL statement: <b>CREATE	ROLE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateShadow">
            <summary>
            Represents the SQL statement: <b>CREATE	SHADOW</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateTable">
            <summary>
            Represents the SQL statement: <b>CREATE	TABLE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateTrigger">
            <summary>
            Represents the SQL statement: <b>CREATE	TRIGGER</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.CreateView">
            <summary>
            Represents the SQL statement: <b>CREATE	VIEW</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DeclareCursor">
            <summary>
            Represents the SQL statement: <b>DECLARE CURSOR</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DeclareExternalFunction">
            <summary>
            Represents the SQL statement: <b>DECLARE EXTERNAL FUNCTION</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DeclareFilter">
            <summary>
            Represents the SQL statement: <b>DECLARE FILTER</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DeclareStatement">
            <summary>
            Represents the SQL statement: <b>DECLARE STATEMENT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DeclareTable">
            <summary>
            Represents the SQL statement: <b>DECLARE TABLE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Delete">
            <summary>
            Represents the SQL statement: <b>DELETE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Describe">
            <summary>
            Represents the SQL statement: <b>DESCRIBE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Disconnect">
            <summary>
            Represents the SQL statement: <b>DISCONNECT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropDatabase">
            <summary>
            Represents the SQL statement: <b>DROP DATABASE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropDomain">
            <summary>
            Represents the SQL statement: <b>DROP DOMAIN</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropException">
            <summary>
            Represents the SQL statement: <b>DROP EXCEPTION</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropExternalFunction">
            <summary>
            Represents the SQL statement: <b>DROP EXTERNAL FUNCTION</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropFilter">
            <summary>
            Represents the SQL statement: <b>DROP FILTER</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropGenerator">
            <summary>
            Represents the SQL statement: <b>DROP GENERATOR</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropIndex">
            <summary>
            Represents the SQL statement: <b>DROP INDEX</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropProcedure">
            <summary>
            Represents the SQL statement: <b>DROP PROCEDURE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropRole">
            <summary>
            Represents the SQL statement: <b>DROP ROLE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropShadow">
            <summary>
            Represents the SQL statement: <b>DROP SHADOW</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropTable">
            <summary>
            Represents the SQL statement: <b>DROP TABLE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropTrigger">
            <summary>
            Represents the SQL statement: <b>DROP TRIGGER</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.DropView">
            <summary>
            Represents the SQL statement: <b>DROP VIEW</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.EndDeclareSection">
            <summary>
            Represents the SQL statement: <b>END DECLARE SECTION</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.EventInit">
            <summary>
            Represents the SQL statement: <b>EVENT INIT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.EventWait">
            <summary>
            Represents the SQL statement: <b>EVENT WAIT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Execute">
            <summary>
            Represents the SQL statement: <b>EXECUTE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.ExecuteImmediate">
            <summary>
            Represents the SQL statement: <b>EXECUTE IMMEDIATE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.ExecuteProcedure">
            <summary>
            Represents the SQL statement: <b>EXECUTE PROCEDURE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Fetch">
            <summary>
            Represents the SQL statement: <b>FETCH</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Grant">
            <summary>
            Represents the SQL statement: <b>GRANT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Insert">
            <summary>
            Represents the SQL statement: <b>INSERT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.InsertCursor">
            <summary>
            Represents the SQL statement: <b>INSERT	CURSOR</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Open">
            <summary>
            Represents the SQL statement: <b>OPEN</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Prepare">
            <summary>
            Represents the SQL statement: <b>PREPARE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Revoke">
            <summary>
            Represents the SQL statement: <b>REVOKE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Rollback">
            <summary>
            Represents the SQL statement: <b>ROLLBACK</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Select">
            <summary>
            Represents the SQL statement: <b>SELECT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.SetDatabase">
            <summary>
            Represents the SQL statement: <b>SET DATABASE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.SetGenerator">
            <summary>
            Represents the SQL statement: <b>SET GENERATOR</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.SetNames">
            <summary>
            Represents the SQL statement: <b>SET NAMES</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.SetSQLDialect">
            <summary>
            Represents the SQL statement: <b>SET SQL DIALECT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.SetStatistics">
            <summary>
            Represents the SQL statement: <b>SET STATISTICS</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.SetTransaction">
            <summary>
            Represents the SQL statement: <b>SET TRANSACTION</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.ShowSQLDialect">
            <summary>
            Represents the SQL statement: <b>SHOW SQL DIALECT</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Update">
            <summary>
            Represents the SQL statement: <b>UPDATE</b>
            </summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Isql.SqlStatementType.Whenever">
            <summary>
            Represents the SQL statement: <b>WHENEVER</b>
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Isql.StringParser">
            <summary>
            StringParser parses	a string returnning	the	(sub)strings between tokens.
            </summary>
            <example>
            An example of how to use this class.
            <code>
            [STAThread]
            static void	Main(string[] args)	{
            	int	currentIndex = 0;
            	string s = ".NET Framework doesn't have a string parsing class?!";
            	StringParser parser = new StringParser(s, false);			
            	while (currentIndex	&lt; s.Length) {
            		Console.WriteLine("Returned Index: {0}", currentIndex = parser.ParseNext());
            		Console.WriteLine("Chars scanned: {0}",	parser.CharsParsed);
            		Console.WriteLine("Parsing result: {0}\n", parser.Result);
            	}
            }
            </code>
            <para>The output:</para>
            <code>
            Returned Index:	5
            Chars scanned: 5
            Parsing	result:	.NET
            
            Returned Index:	15
            Chars scanned: 10
            Parsing	result:	Framework
            
            Returned Index:	23
            Chars scanned: 8
            Parsing	result:	doesn't
            
            Returned Index:	28
            Chars scanned: 5
            Parsing	result:	have
            
            Returned Index:	30
            Chars scanned: 2
            Parsing	result:	a
            
            Returned Index:	37
            Chars scanned: 7
            Parsing	result:	string
            
            Returned Index:	45
            Chars scanned: 8
            Parsing	result:	parsing
            
            Returned Index:	52
            Chars scanned: 7
            Parsing	result:	class?!
            </code>
            </example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.StringParser.#ctor(System.Boolean)">
            <summary>
            Creates	an instance	of StringParser.
            </summary>
            <param name="caseSensitive">Indicates if parser	system should be case-sensitive	(true) or case-intensitive (false).</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.StringParser.#ctor(System.String,System.Boolean)">
            <summary>
            Creates	an instance	of StringParser.
            </summary>
            <param name="targetString">Indicates if	parser system should be	case-sensitive (true) or case-intensitive (false).</param>
            <param name="caseSensitive">The	string to parse.</param>
            <remarks>By	defining the string	(to	parse) in constructor you can call directly	the	method <see cref="M:FirebirdSql.Data.Firebird.Isql.StringParser.ParseNext"/>
            without	having to initializate the target string on	<see cref="M:FirebirdSql.Data.Firebird.Isql.StringParser.Parse(System.String)"/> method. See the example for further details.
            </remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.StringParser.Parse(System.String)">
            <summary>
            Parses target string attempting	to determine the (sub)string between the beginning of this string and the <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Token"/>.
            After the parse is complete system will load into <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.CharsParsed"/> then number of chars scanned and into <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Result"/>
            the	string that	was	found.
            </summary>
            <param name="targetString">The string to be	parsed.</param>
            <returns>The index of the char next	char after the <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Token"/> end.</returns>
            <remarks>If	nothing	is parsed the method will return -1. Case the <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Token"/> wasn't found until the end of	the	string the method retuns 
            (in	<see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Result"/>) the string found between the starting	index and the end of the string. </remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.StringParser.Parse(System.String,System.Int32)">
            <summary>
            Parses target string attempting	to determine the (sub)string between the index <b>start</b>	of this	string and the <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Token"/>.
            After the parse is complete system will load into <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.CharsParsed"/> then number of chars scanned and into <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Result"/>
            the	string that	was	found.
            </summary>
            <param name="targetString">The string to be	parsed.</param>
            <param name="start">The	start index	for	parsing	purposes.</param>
            <returns>The index of the char next	char after the <c>Token</c>	end.</returns>
            <remarks>If	nothing	is parsed the method will return -1. Case the <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Token"/> wasn't found until the end of	the	string the method returns 
            (in	<see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Result"/>) the string found between the starting	index and the end of the string. </remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.StringParser.ParseNext">
            <summary>
            <para>Repeats the parsing starting on the index	returned by <see cref="M:FirebirdSql.Data.Firebird.Isql.StringParser.Parse(System.String)"/> method.</para>
            You	can	also call <b>ParseNext</b> directly	(without calling <see cref="M:FirebirdSql.Data.Firebird.Isql.StringParser.Parse(System.String)"/>) if	you	define the text	to be parsed at	instance construction.	
            </summary>
            <returns>The index of the char next	char after the <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Token"/> end.</returns>
            <remarks>If	nothing	is parsed the method will return -1. Case the <see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Token"/> wasn't found until the end of	the	string the method returns 
            (in	<see cref="P:FirebirdSql.Data.Firebird.Isql.StringParser.Result"/>) the string found between the starting	index and the end of the string.</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.StringParser.IndexOf(System.String)">
            <summary>
            Returns	the	index of the substring in the string. If the substring does	not	exists the method returns <b>-1</b>.
            </summary>
            <param name="substring">The	string to be located.</param>
            <returns>The index of the substring	or -1 if the string	does not exists	within the source string.
            If the the substring is	empty method returns 0.</returns>
            <remarks>The instance parses for the substring in a	case sensitive or intensive	way, as you	specify	at 
            class construction.</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.StringParser.IndexOf(System.String,System.Int32)">
            <summary>
            Returns	the	index of the substring in the string starting on index <b>startIndex</b>. 
            If the substring does not exists the method	returns	<b>-1</b>.
            </summary>
            <param name="substring">The	string to be located.</param>
            <param name="startIndex">The start index of	the	source string where	parser will	start.</param>
            <returns>The index of the substring	or -1 if the string	does not exists	within the source string.
            If the the substring is	empty method returns <i>startIndex</i>.</returns>
            <remarks>The instance parses for the substring in a	case sensitive or intensive	way, as you	specify	at 
            class construction.</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.StringParser.ToString">
            <summary>
            Overrided method that returns the string to	be parsed.
            </summary>
            <returns>The string	to be parsed.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Isql.StringParser.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Indicates if the string	specified as <b>source</b> starts with the <b>token</b>	string.
            </summary>
            <param name="source">The source	string.</param>
            <param name="token">The	token that is intended to find.</param>
            <param name="ignoreCase">Indicated is char case	should be ignored.</param>
            <returns>Returns <b>true</b> if	the	<b>token</b> precedes the <b>source</b>.</returns>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.StringParser.CharsParsed">
            <summary>
            Loaded after a parsing operation with the number of	chars parsed.
            </summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.StringParser.Result">
            <summary>
            Loaded after a parsing operation with the string that was found	between	tokens.
            </summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.StringParser.Token">
            <summary>
            The	string separator. The default value	is a white space: 0x32 ASCII code.
            </summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Isql.StringParser.Length">
            <summary>
            Returns	the	length of the string that is being parsed.
            </summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbBackup">
            <summary>
			Back up a database to a file or tape device. This class cannot be inherited.
			</summary><remarks>
				<p>
			Paths of backup files are relative to the server. Since the Services Manager executes
			backup and restore tasks on the server host, the Services Manager reads and writes
			backup files on the server host.	
			</p>
				<p>
			The username and password used to connect to the services manager will be used 
			to connect to the database for backup. This helps add some degree of security for 
			this operation. Only the SYSDBA user or the owner of the database will be able to 
			backup a database.
			</p>
			</remarks><example>
			The following example makes a backup of a database to a single file and display server output on Console.
				<code>
[STAThread]
static void Main(string[] args)
{
    FbConnectionStringBuilder cs = new FbConnectionStringBuilder();

    cs.UserID   = "SYSDBA";
    cs.Password = "masterkey";
    cs.Database = "nunit_testdb";

    FbBackup backupSvc = new FbBackup();
                
    backupSvc.ConnectionString = cs.ToString();
    backupSvc.BackupFiles.Add(new FbBackupFile(@"c:\testdb.gbk", 2048));
    backupSvc.Verbose = true;

    backupSvc.Options = FbBackupFlags.IgnoreLimbo;

    backupSvc.ServiceOutput += new ServiceOutputEventHandler(ServiceOutput);

    backupSvc.Execute();
}

static void ServiceOutput(object sender, ServiceOutputEventArgs e)
{
    Console.WriteLine(e.Message);
}				</code>
			</example>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbService">
            <summary>
			Base class for Firebird Services implementation.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbService.#ctor">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.Services.FbService"/> class.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbService.Open">
            <summary>
			Opens a connection to the Firebird Services Manager.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbService.Close">
            <summary>
			Closes the connection to the Firebird Service Manager. This is the preferred method of 
			closing any open connection.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbService.StartTask">
            <summary>
			Starts the execution of a service task.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbService.QueryService(System.Byte[])">
            <summary>
			Retrieves information about a firebird service based on a given set of information items.
			</summary><param name="items">
			Information items to be retrieved.	
			</param><summary>
			Parses the information returned by te server of a query call.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbService.ParseQueryInfo(System.Byte[])">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/class[@name=&quot;FbService&quot;]/method[@name=&quot;parseQueryInfo&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbService.GetNextLine">
            <summary>
			Returns one line of output from a service task.
			</summary><returns>
			One line of output from a service task.
			</returns><summary>
			Process the service output making calls to <see cref="M:FirebirdSql.Data.Firebird.Services.FbService.GetNextLine"/> and
			making calls to the <see cref="E:FirebirdSql.Data.Firebird.Services.FbService.ServiceOutput"/> event.						
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbService.ProcessServiceOutput">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/class[@name=&quot;FbService&quot;]/method[@name=&quot;ProcessServiceOutput&quot;]/*"/>
        </member>
        <member name="E:FirebirdSql.Data.Firebird.Services.FbService.ServiceOutput">
            <summary>Occurs when the service returns output information.</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbService.State">
            <summary>
			Gets the current state of the service.
			</summary><value>
			A bitwise combination of the <see cref="T:FirebirdSql.Data.Firebird.Services.FbServiceState"/> values. The 
			default is <b>Closed</b>.
			</value><remarks>
				<para>The allowed state changes are: </para>
				<para>
					<list type="bullet">
						<item>
							<description>
						From <b>Closed</b> to <b>Open</b>, using the <b>Open</b> method of the 
						service object. 
						</description>
						</item>
						<item>
							<description>
						From <b>Open</b> to <b>Closed</b>, using either the <b>Close</b> method or the
						<b>Dispose</b> method of the service object. 
						</description>
						</item>
					</list>
				</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbService.ConnectionString">
            <summary>
				Gets or sets the connection string.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbService.QueryBufferSize">
            <summary>
			Gets or sets the buffer size for service query calls.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbService.Database">
            <summary>
				Gets the target database path.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbBackup.#ctor">
            <summary>
			Creates a new instance of <see cref="T:FirebirdSql.Data.Firebird.Services.FbBackup"/> class.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbBackup.Execute">
            <summary>
			Executes database backup service task.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbBackup.BackupFiles">
            <summary>
			Gets or sets the collection of backup files.
			</summary><value>
			The backup files paths and lengths <see cref="T:FirebirdSql.Data.Firebird.Services.FbBackupFile"/>.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbBackup.Verbose">
            <summary>
			Gets or sets wheter the output be sent to the client.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbBackup.Factor">
            <summary>
			Gets the Tape device blocking factor.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbBackup.Options">
            <summary>
			Gets a value that specifies options used for database backup.
			</summary><value>
			A bitwise combination of the <see cref="T:FirebirdSql.Data.Firebird.Services.FbBackupFlags">FbBackupFlags</see> values which provides information about backup options.
			</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbBackupFile">
            <summary>
			Specifies a backup file path and length to be used in Backup or Restore process.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbBackupFile.#ctor(System.String,System.Int32)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbBackup.xml" path="doc/class[@name=&quot;FbBackupFile&quot;]/constructor[@name=&quot;ctor(system.String,System.Int32)&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbBackupFile.BackupFile">
            <summary>
			Path of a backup output file; you can specify multiple output files.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbBackupFile.BackupLength">
            <summary>
			The length of the buckup file.
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbBackupFlags">
            <summary>
			Specifies access flags for database backup.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbBackupFlags.IgnoreChecksums">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbBackup.xml" path="doc/enum[@name=&quot;FbBackupFlags&quot;]/field[@name=&quot;IgnoreChecksums&quot;]/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbBackupFlags.IgnoreLimbo">
            <summary>Ignore limbo transactions during backup.</summary><value>0x02</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbBackupFlags.MetaDataOnly">
            <summary>Output backup file for metadata only with empty tables.</summary><value>0x04</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbBackupFlags.NoGarbageCollect">
            <summary>
			Suppress normal garbage collection during backup. Improves performance on some databases.
			</summary><value>0x08</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbBackupFlags.OldDescriptions">
            <summary>
			Output metadata in pre-4.0 format.
			</summary><value>0x10</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbBackupFlags.NonTransportable">
            <summary>
			Output backup file format with non-XDR data format. Improves space and performance by a negligible amount.
			</summary><value>0x20</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbBackupFlags.Convert">
            <summary>Convert external table data to internal tables.</summary><value>0x40</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbBackupFlags.Expand">
            <summary>No data compression.</summary><value>0x80</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbConfiguration">
            <summary>
			Allow configuration of local or remote databases properties.
			</summary><example>
			The following example changes the sweep interval, reserve space, forced writes database properties.
			<code>
FbConfiguration configurationSvc = new FbConfiguration();

configurationSvc.UserName = "SYSDBA";
configurationSvc.UserPassword = "masterkey";

configurationSvc.Database = @"C:\TESTDB.GDB";

configurationSvc.SetSweepInterval(1000);
configurationSvc.SetReserveSpace(true);
configurationSvc.SetForcedWrites(true);
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbConfiguration.#ctor">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbConfiguration.xml" path="doc/class[@name=&quot;FbConfiguration&quot;]/constructor[@name=&quot;ctor&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbConfiguration.SetSqlDialect(System.Int32)">
            <summary>
			Sets the SQL dialect of the Firebird Database.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbConfiguration.SetSweepInterval(System.Int32)">
            <summary>
			Sets the number of transactions between database sweeps.
			</summary><param name="sweepInterval">Sweep interval. To turn off database sweeps, set the sweep interval to 0.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbConfiguration.SetPageBuffers(System.Int32)">
            <summary>
			Sets the number of database page buffers.
			</summary><param name="pageBuffers">Number of page buffers.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbConfiguration.DatabaseShutdown(FirebirdSql.Data.Firebird.Services.FbShutdownMode,System.Int32)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbConfiguration.xml" path="doc/class[@name=&quot;FbConfiguration&quot;]/method[@name=&quot;DatabaseShutdown(FbShutdownMode,System.Int32)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbConfiguration.DatabaseOnline">
            <summary>
			Bring a database back online.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbConfiguration.ActivateShadows">
            <summary>
			Activates a shadow file for database use.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbConfiguration.SetForcedWrites(System.Boolean)">
            <summary>
			Sets the write mode for the database.
			</summary><param name="forcedWrites"><b>true</b> to enable forced writes mode; or false for disable it.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbConfiguration.SetReserveSpace(System.Boolean)">
            <summary>
			Configure the database to fill data pages when inserting new records, or reserve 20% of each page for later record deltas;
			</summary><param name="reserveSpace"><b>true</b> to enable database to reserve space; or false for disable it.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbConfiguration.SetAccessMode(System.Boolean)">
            <summary>
			Set the access mode of the database.
			</summary><param name="readOnly"><b>true</b> to set database in read only access; or false for read write access.</param>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbDatabasesInfo">
            <summary>
			Retrieves information about databases on server.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbDatabasesInfo.ConnectionCount">
            <summary>
			Returns the number of databases attached to the server.
			</summary><value>
			Number of databases attached to the server.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbDatabasesInfo.Databases">
            <summary>
			Returns the list of database file paths.
			</summary><value>
			List of database file paths.
			</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbLog">
            <summary>
			Retrieve the firebird.log file from the server if the log file exists. An error is returned if the log file does not exist.
			This class cannot be inherited.
			</summary><example>
				The following example retrieve the firebird.log and displays it in Console.
				<code>	
FbLog logSvc = new FbLog();

logSvc.UserName = "SYSDBA";
logSvc.UserPassword = "masterkey";
					
logSvc.Start();

string lineOutput;
while((lineOutput = logSvc.GetNextLine()) != null)
{
	Console.WriteLine(lineOutput);
}

logSvc.Close();
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbLog.#ctor">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbLog.xml" path="doc/class[@name=&quot;FbLog&quot;]/constructor[@name=&quot;ctor&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbLog.Execute">
            <summary>
			Executes Firebird log service task.
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbRestore">
            <summary>
			Restore a database from backup files. This class cannot be inherited.
			</summary><remarks>
				<para>
			The username and password used to connect to the services manager will be used to connect to the database for restore. 
			This helps add some degree of security for this operation.
			</para>
				<para>
			Only the SYSDBA or owner of a database may use <see cref="F:FirebirdSql.Data.Firebird.Services.FbRestoreFlags.Replace"/> to overwrite an existing database.
			</para>
			</remarks><example>
				The following example makes a restore of a database from a single backup file and display server output on Console.
				<code>
[STAThread]
static void Main(string[] args)
{
    FbConnectionStringBuilder cs = new FbConnectionStringBuilder();

    cs.UserID   = "SYSDBA";
    cs.Password = "masterkey";
    cs.Database = "nunit_testdb";

    FbRestore restoreSvc = new FbRestore();

    restoreSvc.ConnectionString = cs.ToString();
    restoreSvc.BackupFiles.Add(new FbBackupFile(@"c:\testdb.gbk", 2048));
    restoreSvc.Verbose = true;
    restoreSvc.PageSize = 4096;
    restoreSvc.Options = FbRestoreFlags.Create | FbRestoreFlags.Replace;

    restoreSvc.ServiceOutput += new ServiceOutputEventHandler(ServiceOutput);

    restoreSvc.Execute();
}

static void ServiceOutput(object sender, ServiceOutputEventArgs e)
{
    Console.WriteLine(e.Message);
}
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbRestore.#ctor">
            <summary>
			Creates a new instance of <see cref="T:FirebirdSql.Data.Firebird.Services.FbRestore"/> class.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbRestore.Execute">
            <summary>
			Executes Firebird database restore service task.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbRestore.BackupFiles">
            <summary>
			Gets or sets the collections of backup files.
			</summary><value>
			The backup files paths and lengths <see cref="T:FirebirdSql.Data.Firebird.Services.FbBackupFile"/>.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbRestore.Verbose">
            <summary>
			Gets or sets wheter the output be sent to the client.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbRestore.PageBuffers">
            <summary>
			Gets or sets the cache size for the restored database. 
			</summary><value>
			The cache size of the restored database. The default is <b>2048</b> buffer pages in the database cache.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbRestore.PageSize">
            <summary>
			Gets or sets the page size for the restored database.
			</summary><value>
			Database page sizes can be of 1024, 2048, 4096, 8192 and 16384 bytes. 
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbRestore.Options">
            <summary>
			Gets or sets the options used for database restore.
			</summary><value>
			A bitwise combination of the <see cref="T:FirebirdSql.Data.Firebird.Services.FbRestoreFlags"/> values which provides information about restore options.
			</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbRestoreFlags">
            <summary>
			Specifies access flags for database restore.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbRestoreFlags.DeactivateIndexes">
            <summary>Do not build user indexes during restore.</summary><value>0x0100</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbRestoreFlags.NoShadow">
            <summary>Do not recreate shadow files during restore.</summary><value>0x0200</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbRestoreFlags.NoValidity">
            <summary>
			Do not enforce validity conditions (for example, NOT NULL) during restore.
			</summary><value>0x0400</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbRestoreFlags.IndividualCommit">
            <summary>Commit after completing restore of each table.</summary><value>0x0800</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbRestoreFlags.Replace">
            <summary>Replace database, if one exists.</summary><value>0x1000</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbRestoreFlags.Create">
            <summary>Restore but do not overwrite an existing database.</summary><value>0x2000</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbRestoreFlags.UseAllSpace">
            <summary>Do not reserve 20% of each data page for future record versions.</summary><value>0x4000</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbSecurity">
            <summary>
			Allow to list, add, delete, and modify users.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbSecurity.#ctor">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbSecurity.xml" path="doc/class[@name=&quot;FbSecurity&quot;]/constructor[@name=&quot;FbSecurity&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbSecurity.AddUser(FirebirdSql.Data.Firebird.Services.FbUserData)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbSecurity.xml" path="doc/class[@name=&quot;FbSecurity&quot;]/method[@name=&quot;AddUser(FbUserData)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbSecurity.DeleteUser(FirebirdSql.Data.Firebird.Services.FbUserData)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbSecurity.xml" path="doc/class[@name=&quot;FbSecurity&quot;]/method[@name=&quot;DeleteUser(FbUserData)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbSecurity.ModifyUser(FirebirdSql.Data.Firebird.Services.FbUserData)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbSecurity.xml" path="doc/class[@name=&quot;FbSecurity&quot;]/method[@name=&quot;ModifyUser(FbUserData)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbSecurity.DisplayUser(System.String)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbSecurity.xml" path="doc/class[@name=&quot;FbSecurity&quot;]/method[@name=&quot;DisplayUser(System.String)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbSecurity.DisplayUsers">
            <summary>
			Display information for a single user or all users in the isc4.gdb security database, respectively.
			</summary><returns>
			An array of <see cref="T:FirebirdSql.Data.Firebird.Services.FbUserData"/> objects.
			</returns>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbSecurity.UsersDbPath">
            <summary>
			The path to the security database on the server; for example, /usr/interbase/.
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbServerConfig">
            <summary>
			Parameters and values in the firebird.conf file on the server.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.LockMemSize">
            <summary>
			Bytes of shared memory allocated for lock manager. 
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.LockSemCount">
            <summary>
			Number of semaphores for interprocess communication.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.LockSignal">
            <summary></summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.EventMemorySize">
            <summary>
			Bytes of shared memory allocated for event manager.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.PrioritySwitchDelay">
            <summary></summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.MinMemory">
            <summary></summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.MaxMemory">
            <summary></summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.LockGrantOrder">
            <summary>
			When a connection wants to lock an object, it gets a lock request 
			block which specifies the object and the lock level requested. Eack
			locked object has a lock block. Request blocks are connected to those
			lock blocks either as requests that have been granted, or as pending
			requests. 
			</summary><remarks>
				<para>
			The settings:
			</para>
				<para>
				<b>1</b> means locks are granted first come, first served.
			</para>
				<para>
				<b>0</b> means emulate InterBase v3.3 behavior, where locks are granted 
	  			as soon as they are available; can result in lock request
				starvation.
			</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.AnyLockMemory">
            <summary></summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.AnyLockSemaphore">
            <summary></summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.AnyLockSignal">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/struct[@name=&quot;FbServerConfig&quot;]/field[@name=&quot;AnyLockSignal&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.AnyEventMemory">
            <summary></summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.LockHashSlots">
            <summary>
			Tune lock hash list; more hash slots mean shorter hash chains. Only
			necessary under very high load. Prime number values are recommended.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.DeadlockTimeout">
            <summary>
			Determines the number of seconds that the lock manager will wait after a
			conflict has been encountered before purging locks from dead processes 
			and doing extra deadlock scan cycle. Engine detects deadlocks instantly 
			in all normal cases, so this value affects things only if something goes
			wrong. Setting it too low may degrade system performance. 	
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.LockRequireSpins">
            <summary>
			In Classic, only one client process may access the lock table at any
			time. Access to the lock table is governed by a mutex. The mutex can
			be requested conditionally -a wait is a failure and the request must
			be retried - or unconditionally - the request will wait until it is
			satisfied. This parameter establishes the number of attempts that
			will be made conditionally. Relevant only on SMP machines.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.ConnectionTimeout">
            <summary>
			Seconds to wait before concluding an attempt to connect has failed.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.DummyPacketInterval">
            <summary>
			Seconds to wait on a silent client connection before the server sends
			dummy packets to request acknowledgment.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.IpcMapSize">
            <summary>
			Size in bytes of one client's portion of the memory mapped file used
			for local connections.	
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerConfig.DefaultDbCachePages">
            <summary>
			Number of cached database pages.
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbServerProperties">
            <summary>
			Retrieve server configuration information.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbServerProperties.#ctor">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbServerProperties.xml" path="doc/class[@name=&quot;FbServerProperties&quot;]/constructor[@name=&quot;FbServerProperties&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerProperties.Version">
            <summary>
			Gets the version of the services manager.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerProperties.ServerVersion">
            <summary>
			Gets the version of the Firebird server.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerProperties.Implementation">
            <summary>
			Gets the implementation of the Firebird server.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerProperties.RootDirectory">
            <summary>
			Gets the location of the Firebird root directory on the server; this is the value 
			of the $INTERBASE system environment variable, or the contents of the registry 
			key.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerProperties.LockManager">
            <summary>
			Gets the location of the InterBase lock manager file on the server; this is the 
			value of the $INTERBASE_LCK system environment variable, or by default 
			$INTERBASE/serverhostname.lck.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerProperties.MessageFile">
            <summary>
			Gets the location of the InterBase message file on the server; this is the value 
			of the $INTERBASE_MSG system environment variable, or by default 
			$INTERBASE/interbase.msg.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerProperties.DatabasesInfo">
            <summary>
			Gets information about databases on server.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbServerProperties.ServerConfig">
            <summary>
			Gets the parameters and values for IB_CONFIG.
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbServiceState">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/enum[@name=&quot;FbServiceState&quot;]/overview/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbServiceState.Closed">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/enum[@name=&quot;FbServiceState&quot;]/field[@name=&quot;Closed&quot;]/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbServiceState.Open">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/enum[@name=&quot;FbServiceState&quot;]/field[@name=&quot;Open&quot;]/*"/>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbShutdownMode">
            <summary>
			Allowed shutdown modes.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbShutdownMode.Forced">
            <summary>
			Shut down the database after the specified number of seconds; 
			to shut down the database immediately, set the shutdown interval to 0.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbShutdownMode.DenyTransaction">
            <summary>
			Deny new transactions and shut down the database after the specified number
			of seconds; if transactions are active after the shutdown interval has expired,
			the shutdown will fail; to shut down the database immediately, set the
			shutdown interval to 0.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbShutdownMode.DenyConnection">
            <summary>
			Deny new connections and shut down the database after the specified number
			of seconds; if connections are active after the shutdown interval has expired,
			the shutdown will fail; to shut down the database immediately, set the
			shutdown interval to 0
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbStatistical">
            <summary>
			Retrieve database statistics for the database specified. This class cannot be inherited.
			</summary><example>
			The following sample request statistics for system tables and indexes in addition to user tables and indexes and
			displays it in Console.
				<code>
FbStatistical statisticalSvc = new FbStatistical();

statisticalSvc.UserName = "SYSDBA";
statisticalSvc.UserPassword = "masterkey";

statisticalSvc.Database = @"C:\TESTDB.GDB";
statisticalSvc.Options = FbStatisticalFlags.SystemTablesRelations;
		
statisticalSvc.Start();

string lineOutput;
while((lineOutput = statisticalSvc.GetNextLine()) != null)
{
	Console.WriteLine(lineOutput);
}

statisticalSvc.Close();
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbStatistical.#ctor">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbStatistical.xml" path="doc/class[@name=&quot;FbStatistical&quot;]/constructor[@name=&quot;FbStatistical&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbStatistical.Execute">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbStatistical.xml" path="doc/class[@name=&quot;FbStatistical&quot;]/constructor[@name=&quot;Execute&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbStatistical.Options">
            <summary>
			Gets a value that specifies options used for retrieve database statistics.
			</summary><value>
			A bitwise combination of the <see cref="T:FirebirdSql.Data.Firebird.Services.FbStatisticalFlags"/> values which 
			provides information about statistics options.
			</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbStatisticalFlags">
            <summary>
			Specifies access flags for retrieve database statistics.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbStatisticalFlags.DataPages">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbStatistical.xml" path="doc/enum[@name=&quot;FbStatisticalFlags&quot;]/field[@name=&quot;DataPages&quot;]/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbStatisticalFlags.DatabaseLog">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbStatistical.xml" path="doc/enum[@name=&quot;FbStatisticalFlags&quot;]/field[@name=&quot;DatabaseLog&quot;]/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbStatisticalFlags.HeaderPages">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbStatistical.xml" path="doc/enum[@name=&quot;FbStatisticalFlags&quot;]/field[@name=&quot;HeaderPages&quot;]/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbStatisticalFlags.IndexPages">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbStatistical.xml" path="doc/enum[@name=&quot;FbStatisticalFlags&quot;]/field[@name=&quot;IndexPages&quot;]/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbStatisticalFlags.SystemTablesRelations">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbStatistical.xml" path="doc/enum[@name=&quot;FbStatisticalFlags&quot;]/field[@name=&quot;SystemTablesRelations&quot;]/*"/>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbUserData">
            <summary>
			Represents data of a user of security.fdb security database.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbUserData.#ctor">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/class[@name=&quot;FbUserData&quot;]/constructor[@name=&quot;FbUserData&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbUserData.UserName">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/struct[@name=&quot;FbUserData&quot;]/property[@name=&quot;UserName&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbUserData.UserPassword">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/struct[@name=&quot;FbUserData&quot;]/property[@name=&quot;UserPassword&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbUserData.FirstName">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/struct[@name=&quot;FbUserData&quot;]/property[@name=&quot;FirstName&quot;]/*"/>		
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbUserData.LastName">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/struct[@name=&quot;FbUserData&quot;]/property[@name=&quot;LastName&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbUserData.MiddleName">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/struct[@name=&quot;FbUserData&quot;]/property[@name=&quot;MiddleName&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbUserData.UserID">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/struct[@name=&quot;FbUserData&quot;]/property[@name=&quot;UserID&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbUserData.GroupID">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/struct[@name=&quot;FbUserData&quot;]/property[@name=&quot;GroupID&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbUserData.GroupName">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/struct[@name=&quot;FbUserData&quot;]/property[@name=&quot;GroupName&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbUserData.RoleName">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/struct[@name=&quot;FbUserData&quot;]/property[@name=&quot;RoleName&quot;]/*"/>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbValidation">
            <summary>
			Request a database validation. This class cannot be inherited.    
			</summary><remarks>
				<para>
			Database validation scans internal data structures for specific types of corruption. In
			some cases, the validation operation can repair corruption.	
			</para>
				<para>
			The validation operation cannot guarantee to repair all cases of corruption. Do not rely
			on database validation as a disaster recovery policy in lieu of making regular backups of
			your database.
			</para>
			</remarks><example>
			The following example makes a database validation for locate and release pages that are allocated but unassigned to any data structures.
				<code>
FbValidation validationSvc = new FbValidation();

validationSvc.UserName = "SYSDBA";
validationSvc.UserPassword = "masterkey";

validationSvc.Database = @"D:\TESTDB.GDB";
validationSvc.Options = FbValidationFlags.ValidateDatabase; 

validationSvc.Start();

string lineOutput;
while((lineOutput = validationSvc.GetNextLine()) != null)
{
	Console.WriteLine(lineOutput);
}

validationSvc.Close();	
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbValidation.#ctor">
            <summary>
			Creates a new instance of <see cref="T:FirebirdSql.Data.Firebird.Services.FbValidation"/> class.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.FbValidation.Execute">
            <summary>
			Executes Firebird database validation service task.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.FbValidation.Options">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbValidation.xml" path="doc/class[@name=&quot;FbValidation&quot;]/property[@name=&quot;Options&quot;]/*"/>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.FbValidationFlags">
            <summary>
			Specifies access flags for database validation.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbValidationFlags.ValidateDatabase">
            <summary>    
			Locate and release pages that are allocated but unassigned to any data structures.
			</summary><value>0x01</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbValidationFlags.SweepDatabase">
            <summary>
			Request database sweep to mark outdated records as free space.
			</summary><value>0x02</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbValidationFlags.MendDatabase">
            <summary>
			Mark corrupted records as unavailable, so subsequent operations skip them.
			</summary><value>0x04</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbValidationFlags.CheckDatabase">
            <summary>
			Request read-only validation of the database, without correcting any problems.
			</summary><value>0x10</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbValidationFlags.IgnoreChecksum">
            <summary>Ignore all checksum errors.</summary><value>0x20</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbValidationFlags.KillShadows">
            <summary>Remove references to unavailable shadow files.</summary><value>0x40</value>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.Services.FbValidationFlags.Full">
            <summary>
			Check record and page structures, releasing unassigned record fragments.
			</summary><value>
			0x80
			</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.ServiceOutputEventHandler">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbService.xml" path="doc/delegate[@name=&quot;ServiceOutputEventHandler(System.Object,ServiceOutputEventArgs)&quot;]/*"/>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.Services.ServiceOutputEventArgs">
            <summary>
			Provides data for the <see cref="E:FirebirdSql.Data.Firebird.Services.FbService.ServiceOutput"/> event. 
			This class cannot be inherited.
            </summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.Services.ServiceOutputEventArgs.#ctor(System.String)">
            <summary>
                Initializes a new instance of the ServiceOutputEventArgs class with
                the given service output message.
            </summary><param name="message">
                The service output message.
            </param>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.Services.ServiceOutputEventArgs.Message">
            <summary>
                Gets the service output message.
            </summary><value>A string that represents the service output message.</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbCharset">
            <summary>
			Specifies the character set of <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/>.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Default">
            <summary>
			Use the connection character set.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.None">
            <summary>
			No specific character set usage. 
			</summary><remarks>
			This will be mapped to the .NET default encoding.
			</remarks>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Octets">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbCharset.xml" path="doc/enum[@name=&quot;FbCharset&quot;]/field[@name=&quot;Octets&quot;]/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Ascii">
            <summary>
			American Standard Code for Information Interchange.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.UnicodeFss">
            <summary>
			Eight-bit Unicode Transformation Format.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.ShiftJis0208">
            <summary>
			Shift-JIS, Japanese.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.EucJapanese0208">
            <summary>
			JIS X 0201, 0208, 0212, EUC encoding, Japanese.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Iso2022Japanese">
            <summary>
			Windows Japanese.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Dos437">
            <summary>
			MS-DOS United States, Australia, New Zealand, South Africa.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Dos850">
            <summary>
			MS-DOS Latin-1.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Dos865">
            <summary>
			MS-DOS Nordic.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Dos860">
            <summary>
			MS-DOS Portuguese.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Dos863">
            <summary>
			MS-DOS Canadian French.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Iso8859_1">
            <summary>
			ISO 8859-1, Latin alphabet No. 1.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Iso8859_2">
            <summary>
			ISO 8859-2, Latin alphabet No. 2.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Ksc5601">
            <summary>
			Windows Korean.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Dos861">
            <summary>
			MS-DOS Icelandic.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Windows1250">
            <summary>
			Windows Eastern European.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Windows1251">
            <summary>
			Windows Cyrillic.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Windows1252">
            <summary>
			Windows Latin-1.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Windows1253">
            <summary>
			Windows Greek.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Windows1254">
            <summary>
			Windows Turkish.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Big5">
            <summary>
			Big5, Traditional Chinese.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Gb2312">
            <summary>
			GB2312, EUC encoding, Simplified Chinese.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Windows1255">
            <summary>
			Windows Hebrew.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Windows1256">
            <summary>
			Windows Arabic.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCharset.Windows1257">
            <summary>
			Windows Baltic.
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbCommand">
            <summary>
			Represents an SQL statement or stored procedure to execute against a data source. 
			This class cannot be inherited.
			</summary><remarks>
				<p>
				It's strongly recommend to call <see cref="M:FirebirdSql.Data.Firebird.FbCommand.Dispose(System.Boolean)">Dispose</see> method
				for free the memory allocated by the Firebird Server, when the command is no more needed.
				</p>
				<p>
				The <b>FbCommand</b> class provides the following methods for executing commands
				against a Firebird database:
				</p>
				<list type="table">
					<listheader>
						<term>Method</term>
						<term>Description</term>
					</listheader>
					<item>
						<description>ExecuteReader</description>
						<description>Executes commands that return rows.</description>
					</item>
					<item>
						<description>ExecuteNonQuery</description>
						<description>Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</description>
					</item>
					<item>
						<description>ExecuteScalar</description>
						<description>Retrieves a single value (for example, an aggregate value) from a database.</description>
					</item>
				</list>	
			</remarks><example>
				<code>
FbConnection connection = new FbConnection(myConnString);
FbTransaction transaction = connection.BeginTransaction()
FbCommand command = new FbCommand("SELECT * FROM employee", connection);

connection.Open();
FbDataReader reader = command.ExecuteReader();

try 
{
	while (reader.Read()) 
	{
		Console.WriteLine(myReader.GetValue(0));
	}
}
finally 
{
	// always call Close when done reading.
	reader.Close();
	// always call Close when done with connection.
	connection.Close();
}
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.#ctor">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> class.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.#ctor(System.String)">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> class with the text of the query.
			</summary><param name="cmdText">The text of the query.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.#ctor(System.String,FirebirdSql.Data.Firebird.FbConnection)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbCommand.xml" path="doc/class[@name=&quot;FbCommand&quot;]/constructor[@name=&quot;ctor(System.String,FbConnection)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.#ctor(System.String,FirebirdSql.Data.Firebird.FbConnection,FirebirdSql.Data.Firebird.FbTransaction)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbCommand.xml" path="doc/class[@name=&quot;FbCommand&quot;]/constructor[@name=&quot;ctor(System.String,FbConnection,Transaction)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.Dispose(System.Boolean)">
            <summary>
			Releases the unmanaged and, optionally, the managed resources used by the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object.
			</summary><param name="disposing">
			True for dispose managed and unmanaged resources and false for dispose 
			anly the unmanaged resources.
			</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.Cancel">
            <summary>
			Try to cancel command execution.
			</summary><remarks>Not currently supported.</remarks><exception cref="T:System.NotSupportedException">Always.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.CreateParameter">
            <summary>
			Creates a new instance of an <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> class.
			</summary><returns>An <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> object.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.Prepare">
            <summary>Creates a prepared (or compiled) version of the command.</summary><remarks>
			<b>Prepare</b> is automatically called when the command is executed using <see cref="M:FirebirdSql.Data.Firebird.FbCommand.ExecuteNonQuery"/>,
			<see cref="M:FirebirdSql.Data.Firebird.FbCommand.ExecuteReader"/>, <see cref="M:FirebirdSql.Data.Firebird.FbCommand.ExecuteReader(System.Data.CommandBehavior)"/> or <see cref="M:FirebirdSql.Data.Firebird.FbCommand.ExecuteScalar"/> methods.
			</remarks><exception cref="T:System.InvalidOperationException">
				<para>The connection does not exist. </para>
				<para>-or-</para>
				<para>The connection is not open.</para>
				<para>-or-</para>
				<para>The transaction is not valid.</para>
			</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.ExecuteNonQuery">
            <summary>
			Executes an the query and returns the number of rows affected.
			</summary><returns>
			For UPDATE, INSERT, and DELETE statements, the return value is the number 
			of rows affected by the command. For all other types of statements, the return value is -1.
			</returns><remarks>
				<para>
				Although ExecuteNonQuery does not return any rows, any output 
				parameters or return values mapped to parameters are populated with data.
				</para>
				<para>
				<b>IMPORTANT</b>: To execute this method you need to have a <see cref="T:FirebirdSql.Data.Firebird.FbTransaction"/> associated to the command. 
				</para>
			</remarks><exception cref="T:System.InvalidOperationException">
				<para>The connection does not exist. </para>
				<para>-or-</para>
				<para>The connection is not open.</para>
				<para>-or-</para>
				<para>The transaction is not valid.</para>
			</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.ExecuteReader">
            <summary>
			Executes the query and builds an <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> object.
			</summary><returns>An <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> object.</returns><exception cref="T:System.InvalidOperationException">
				<para>The connection does not exist. </para>
				<para>-or-</para>
				<para>The connection is not open.</para>
				<para>-or-</para>
				<para>The transaction is not valid.</para>
			</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
			Executes the query and builds an <see cref="T:FirebirdSql.Data.Firebird.FbDataReader">FbDataReader</see> using one of the <b>CommandBehavior</b> values.
			</summary><param name="behavior">One of the <see cref="T:System.Data.CommandBehavior"/> values.</param><returns>An <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> object.</returns><exception cref="T:System.InvalidOperationException">
				<para>The connection does not exist. </para>
				<para>-or-</para>
				<para>The connection is not open.</para>
				<para>-or-</para>
				<para>The transaction is not valid.</para>
			</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommand.ExecuteScalar">
            <summary>
			Executes the query, and returns the first column of the first row in the
			resultset returned by the query. Extra columns or rows are ignored.
			</summary><returns>The first column of the first row in the resultset.</returns><exception cref="T:System.InvalidOperationException">
				<para>The connection does not exist. </para>
				<para>-or-</para>
				<para>The connection is not open.</para>
				<para>-or-</para>
				<para>The transaction is not valid.</para>
			</exception>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommand.CommandText">
            <summary>
			Gets or sets the SQL statement or stored procedure to execute.
			</summary><value>
			The SQL statement or stored procedure to execute. The default value is an empty string ("").
			</value><remarks>
				<para>
				When the <see cref="P:FirebirdSql.Data.Firebird.FbCommand.CommandType"/> property is set to <b>StoredProcedure</b>, 
				the <b>CommandText</b> property should be set to the name of the stored procedure. 
				The user may be required to use escape character syntax if the stored procedure name 
				contains any special characters. The command executes this stored procedure when you call one of the Execute methods.
				</para>
				<para>
				The Firebird .NET Data Provider support the question mark (?) placeholder and named 
				parameters for passing parameters to a SQL Statement or a stored procedure.
				</para>
				<para>
				For example you can do:
				<code>
				SELECT * FROM Customers WHERE CustomerID = @CustomerID
				</code>
				or
				<code>
				SELECT * FROM Customers WHERE CustomerID = ?
				</code>	
				</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommand.CommandType">
            <summary>
			Gets or sets how the <see cref="P:FirebirdSql.Data.Firebird.FbCommand.CommandText"/> property is interpreted.
			</summary><value>
			One of the <b>CommandType</b> values. The default is <b>Text</b>.
			</value><exception cref="T:System.ArgumentException">The value was not a valid <b>CommandType</b>.</exception>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommand.CommandPlan">
            <summary>
			Gets the plan used by the server for the command.
			</summary><remarks>
			It's needed that the command was prepared to retrieve the command plan.
            It will return <b>null</b> if the commplan cannot be determined.
			</remarks><value>
			The plan used for the Firebird server for the current command. The default is an empty string.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommand.Connection">
            <summary>
			Gets or sets the <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> associated with the current command.
			</summary><value>The connection to a data source. The default is a null value.</value><exception cref="T:System.InvalidOperationException">The <b>Connection</b> property was changed while a transaction was in progress.</exception><remarks>
				<para>
				You cannot set the Connection, <see cref="P:FirebirdSql.Data.Firebird.FbCommand.CommandType"/>, 
				and <see cref="P:FirebirdSql.Data.Firebird.FbCommand.CommandText"/> properties if the current
				connection is performing an execute or fetch operation.	
				</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommand.Parameters">
            <summary>
			Gets the <see cref="T:FirebirdSql.Data.Firebird.FbParameterCollection"/>.
			</summary><value>
			The parameters of the DSQL statement or stored procedure. The default is an empty collection.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommand.Transaction">
            <summary>
			Gets or sets the <see cref="T:FirebirdSql.Data.Firebird.FbTransaction"/> within which the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> will be used.
			</summary><value>An <see cref="T:FirebirdSql.Data.Firebird.FbTransaction"/> object. The default is a null value.</value><remarks>
			You cannot set the Transaction property if it is already set to a 
			specific value, and the command is in the process of executing. If you set the 
			transaction property to an <see cref="T:FirebirdSql.Data.Firebird.FbTransaction"/> object that is different of the
			<see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> of the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object, an exception will be thrown the
			next time you attempt to execute or prepare the command.
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommand.UpdatedRowSource">
            <summary>
			Gets or sets how the Update method should apply command results to the DataRow.
			</summary><value>One of the <b>System.Data.UpdateRowSource</b> values.</value><exception cref="T:System.ArgumentException">The value entered was not one of the <b>UpdateRowSource</b> values.</exception><remarks>
			The default UpdateRowSource value is <b>Both</b> unless the command is automatically 
			generated, for example using the <see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder"/>), in which case the default will be <b>None</b>.
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommand.FetchSize">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbCommand.xml" path="doc/class[@name=&quot;FbCommand&quot;]/property[@name=&quot;FetchSize&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommand.DesignTimeVisible">
            <summary>
			Gets or sets whether the command object should be visible in a Windows Forms Designer control.
			</summary><value>
			Whether the command object should be visible in a control. The default is <b>true</b>.
			</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbCommandBuilder">
            <summary>    
			Automatically generates single-table commands used to reconcile changes 
			made to a DataSet with the associated data source. This class cannot be inherited.    
			</summary><remarks>
			<para>    
			The <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> does not automatically generate the SQL statements required to 
			reconcile changes made to a DataSet associated with the data source. However, you can create an 
			<b>FbCommandBuilder</b> object that generates SQL statements for single-table 
			updates by setting the SelectCommand property of the <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>. 
			Then, the <b>FbCommandBuilder</b> generates any additional SQL statements that you do not set.
			</para>
			<para>
			To generate INSERT, UPDATE, or DELETE statements, the <b>FbCommandBuilder</b> 
			uses the <see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.SelectCommand"/> property to retrieve a required set of metadata. 
			If you change the value of <see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.SelectCommand"/> after the metadata has been 
			retrieved (for example, after the first update), you then should call the 
			<see cref="M:FirebirdSql.Data.Firebird.FbCommandBuilder.RefreshSchema"/> method to update the metadata.
			</para>
			</remarks><example>
				<code>
public DataSet SelectRows(DataSet myDataSet,string myConnection,string mySelectQuery,string myTableName) 
{
    FbConnection  myConn	 = new FbConnection(myConnection);    
    FbDataAdapter myDataAdapter = new FbDataAdapter();
    FbTransaction myTxn		 = myConn.BeginTransaction();
    
    myDataAdapter.SelectCommand = new FbCommand(mySelectQuery, myConn, myTxn);
    FbCommandBuilder custCB	 = new FbCommandBuilder(myDataAdapter);

    myConn.Open();

    DataSet custDS = new DataSet();
    myDataAdapter.Fill(custDS, "Employee");

    //code to modify data in dataset here

    //Without the FbCommandBuilder this line would fail
    myDataAdapter.Update(custDS, "Employee");

    myConn.Close();

    return custDS;
 }		
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommandBuilder.#ctor">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder"/> class.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommandBuilder.#ctor(FirebirdSql.Data.Firebird.FbDataAdapter)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbCommandBuilder.xml" path="doc/class[@name=&quot;FbCommandBuilder&quot;]/property[@name=&quot;ctor(FbDataAdapter)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommandBuilder.Dispose(System.Boolean)">
            <summary>
			Releases the unmanaged and, optionally, the managed resources used by the <see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder"/> object.
			</summary><param name="disposing">
			True for dispose managed and unmanaged resources and false for dispose 
			anly the unmanaged resources.
			</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommandBuilder.DeriveParameters(FirebirdSql.Data.Firebird.FbCommand)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbCommandBuilder.xml" path="doc/class[@name=&quot;FbCommandBuilder&quot;]/method[@name=&quot;DeriveParameters(FbCommand)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommandBuilder.GetInsertCommand">
            <summary>
			Gets the automatically generated <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object required to perform 
			insertions at the data source.
			</summary><returns>
			The automatically generated <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object required to perform insertions.
			</returns><remarks>
			<para>
			You can use the <b>GetInsertCommand</b> method for informational or troubleshooting 
			purposes because it returns the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object to be executed.
			You can also use <b>GetInsertCommand</b> as the basis of a modified command. 
			</para>
			<para>
			After the SQL statement is first generated, you must explicitly call 
			<see cref="M:FirebirdSql.Data.Firebird.FbCommandBuilder.RefreshSchema"/> if it changes the statement in any way. Otherwise, the 
			<b>GetInsertCommand</b> still will be using information from the previous statement, 
			which might not be correct. The SQL statements are first generated when the 
			application calls either Update or <b>GetInsertCommand</b>.
			</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommandBuilder.GetUpdateCommand">
            <summary>
			Gets the automatically generated <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object required to perform 
			updates at the data source.
			</summary><returns>
			The automatically generated <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object required to perform updates.
			</returns><remarks>
			<para>
			You can use the <b>GetUpdateCommand</b> method for informational or troubleshooting 
			purposes because it returns the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object to be executed.
			You can also use <b>GetUpdateCommand</b> as the basis of a modified command. 
			</para>
			<para>
			After the SQL statement is first generated, you must explicitly call 
			<see cref="M:FirebirdSql.Data.Firebird.FbCommandBuilder.RefreshSchema"/> if it 
			changes the statement in any way. Otherwise, the <b>GetUpdateCommand</b>
			still will be using information from the previous statement, which might 
			not be correct. The SQL statements are first generated when the application 
			calls either Update or <b>GetUpdateCommand</b>.
			</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommandBuilder.GetDeleteCommand">
            <summary>
			Gets the automatically generated <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object required to perform 
			deletions at the data source.
			</summary><returns>
			The automatically generated <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object required to perform deletions.
			</returns><remarks>
			<para>
			You can use the <b>GetDeleteCommand</b> method for informational or troubleshooting 
			purposes because it returns the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object to be executed.
			</para>
			<para>
			You can also use <b>GetDeleteCommand</b> as the basis of a modified command. 
			</para>
			<para>
			After the SQL statement is first generated, you must explicitly call 
			<see cref="M:FirebirdSql.Data.Firebird.FbCommandBuilder.RefreshSchema"/> if it 
			changes the statement in any way. Otherwise, the <b>GetDeleteCommand</b> 
			still will be using information from the previous statement,
			which might not be correct. The SQL statements are first generated when 
			the application calls either Update or <b>GetDeleteCommand</b>.
			</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbCommandBuilder.RefreshSchema">
            <summary>
			Refreshes the database schema information used to generate INSERT, UPDATE, 
			or DELETE statements.
			</summary><remarks>
			You should call <b>RefreshSchema</b> whenever the <see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.SelectCommand"/> value of the 
			<see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> changes.
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommandBuilder.DataAdapter">
            <summary>
			Gets or sets an <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> object for which 
			this <see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder"/> object will generate SQL statements.
			</summary><remarks>
			The <see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder"/> registers itself as a listener for 
			<see cref="E:FirebirdSql.Data.Firebird.FbDataAdapter.RowUpdating"/> events that are generated by the 
			<see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> specified in this property.
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommandBuilder.QuotePrefix">
            <summary>
			Gets or sets the beginning character or characters to use when working 
			with database objects (for example, tables or columns) whose names 
			contain characters such as spaces or reserved tokens.
			</summary><exception cref="T:System.InvalidOperationException">
			This property cannot be changed after an insert, update, or delete command has 
			been generated.
			</exception><remarks>
			<para>
			Some data sources may contain objects whose names include characters 
			such as spaces, commas, and semicolons. To accommodate this, use the 
			<b>QuotePrefix</b> and <see cref="P:FirebirdSql.Data.Firebird.FbCommandBuilder.QuoteSuffix"/> 
			properties to specify delimiters, such as a left and right bracket, that will encapsulate the object name.		
			</para>
			<para><b>Note:</b></para>
			<para>
			Although you cannot change the <see cref="P:FirebirdSql.Data.Firebird.FbCommandBuilder.QuotePrefix"/> or <see cref="P:FirebirdSql.Data.Firebird.FbCommandBuilder.QuoteSuffix"/>
			properties after an insert, update, or delete command has been generated, you can change their 
			settings after calling the Update method of an <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>.
			</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommandBuilder.QuoteSuffix">
            <summary>
			Gets or sets the ending character or characters to use when working with 
			database objects, (for example, tables or columns), whose names contain 
			characters such as spaces or reserved tokens.
			</summary><exception cref="T:System.InvalidOperationException">
			This property cannot be changed after an insert, update, or delete command has 
			been generated.
			</exception><remarks>
			<para>
			Some data sources may contain objects whose names include characters such 
			as spaces, commas, and semicolons. To accommodate this, use the 
			<see cref="P:FirebirdSql.Data.Firebird.FbCommandBuilder.QuotePrefix"/> and <b>QuoteSuffix</b>
			properties to specify delimiters, such as a left and right bracket, that will encapsulate the object name.
			</para>
			<para>Note:</para>
			<para>
			Although you cannot change the <see cref="P:FirebirdSql.Data.Firebird.FbCommandBuilder.QuotePrefix"/> or <b>QuoteSuffix</b>
			properties after an insert, update, or delete command has been generated, you can change their 
			settings after calling the Update method of an <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>.
			</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommandBuilder.CommandBuilderBehavior">
            <summary>
			One of the <see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilderBehavior">FbCommandBuilderBehavior</see> values.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbCommandBuilder.TimestampColumnName">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbCommandBuilder.xml" path="doc/class[@name=&quot;FbCommandBuilder&quot;]/property[@name=&quot;timestampColumnName&quot;]/*"/>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbCommandBuilderBehavior">
            <summary>
			Provides a description of how <see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder">FbCommandBuilder</see>
			will do the generation of the <b>WHERE</b> clausule of <b>UPDATE</b> and <b>DELETE</b> commands 
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCommandBuilderBehavior.Default">
            <summary>
			<see cref="F:FirebirdSql.Data.Firebird.FbCommandBuilderBehavior.AllFields">AllFields</see>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCommandBuilderBehavior.AllFields">
            <summary>
			The <see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder">FbCommandBuilder</see> class will do the generation
			of the <b>WHERE</b> clausule of <b>UPDATE</b> and <b>DELETE</b> commands using
			all fields.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCommandBuilderBehavior.KeyFields">
            <summary>
			The <see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder">FbCommandBuilder</see> class will do the generation
			of the <b>WHERE</b> clausule of <b>UPDATE</b> and <b>DELETE</b> commands using
			only the key fields.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbCommandBuilderBehavior.KeyAndTimestampFields">
            <summary>
			The <see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder">FbCommandBuilder</see> class will do the generation
			of the <b>WHERE</b> clausule of <b>UPDATE</b> and <b>DELETE</b> commands using
			only the key fields and the timestamp column specified in 
			<see cref="P:FirebirdSql.Data.Firebird.FbCommandBuilder.TimestampColumnName">TimestampColumnName</see>.
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbConnection">
            <summary>Represents an open connection to a Firebird database. This class cannot be inherited.</summary><remarks>
				<para>A <b>FbConnection</b> object represents a individual connection to Firebird server.</para>
				<para>If a <b>FbConnection</b> object goes out of scope, it is not closed,
				you must explicitly close the the connection by calling	<see cref="M:FirebirdSql.Data.Firebird.FbConnection.Close"/> or <see cref="M:FirebirdSql.Data.Firebird.FbConnection.Dispose(System.Boolean)"/>.
			</para>
			</remarks><example>
				<code>
public void InsertRow(string connectionString)
{
	//	If the connection string is null, use a default.
	if(connectionString == "")
	{
		FbConnectionStringBuilder cs = new FbConnectionStringBuilder();
		
		cs.DataSource = "localhost";
		cs.Database = "C:\\PROGRAM FILES\\FIREBIRD\\EXAMPLES\\EMPLOYEE.FDB";
		cs.UserID = "SYSDBA";
		cs.Password = "masterkey";
		cs.Dialect = 3;
		
		connectionString = cs.ToString();
	}
	
	FbConnection connection = new FbConnection(connectionString);					
	connection.Open();					
	FbTransaction transaction = connection.BeginTransaction();
	
	string insertQuery = "INSERT INTO PROJECT(proj_id, proj_name, product) Values('FBNP', '.NET Provider', 'N/A')";
	FbCommand command = new FbCommand(insertQuery, myConn, myTxn);	
	
	command.ExecuteNonQuery();
	
	transaction.Commit();
	
	connection.Close();
}
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.#ctor">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> class.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.#ctor(System.String)">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> class 
			with the specified connection string.
			</summary><param name="connectionString">Connection string.</param>	
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.Dispose(System.Boolean)">
            <summary>Releases the unmanaged and, optionally, the managed resources used by the <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> object.</summary><param name="disposing"><b>True</b> for dispose managed and unmanaged resources and <b>false</b> for dispose only the unmanaged resources.</param><remarks>
				<para>
				This method is called by the public <b>Dispose()</b> method and the <b>Finalize</b> method. 
				<b>Dispose()</b> invokes the protected <b>Dispose(Boolean)</b> method with the disposing 
			 parameter set to <b>true</b>. <b>Finalize</b> invokes <b>Dispose</b> with <i>disposing</i> set to <b>false</b>.
				</para>
				<para>
				When the disposing parameter is true, the method releases all resources held 
				by any managed objects that this FbConnection references. 
				It does this by invoking the Dispose() method of each referenced object.
				</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.GetPooledConnectionCount(FirebirdSql.Data.Firebird.FbConnection)">
            <summary>
			Gets the number of active connections in the connection pool that
			owns the spcified connection.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.ClearAllPools">
            <summary>
			Clears all active connection pools, closing all active connections.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.ClearPool(FirebirdSql.Data.Firebird.FbConnection)">
            <summary>
			Clear the connection pool that owns the specified connection, 
			closing all active connections.
			</summary><param name="connection">A <b>FbConnection</b> instance.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.CreateDatabase(System.String)">
            <summary>
			Creates a new database using the given connection string information.
			</summary><param name="connectionString">A valid connection string.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.CreateDatabase(System.String,System.Boolean)">
            <summary>
			Creates a new database using the given connection string information.
			</summary><param name="connectionString">A valid connection string.</param><param name="overwrite">Specfifies if an <b>existing</b> database should be overwritten or not.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.CreateDatabase(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
			Creates a new database using the given connection string information,
            create parameters.
			</summary><param name="connectionString">A valid connection string.</param><param name="pageSize">Database page size.</param><param name="forcedWrites">
                <summary>
                Indicates wheter the database should be created using the Forced Writes mode.
                </summary>
                <remarks>
                    <b>true</b> to create the database in Forced writes mode; or <b>false</b> if not.
                </remarks>
            </param><param name="overwrite">Indicates if the database should overwrite an existing database.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.DropDatabase(System.String)">
            <summary>
			Drops a existent database using the given connection string information.
			</summary><param name="connectionString">A valid connection string.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.CreateDatabase(System.Collections.Hashtable)">
            <summary>
			Creates a new database.
			</summary><param name="values">Collection of valid keys and values.</param><remarks>
				<para>List of valid keys:</para>
				<para>
					<list type="table">
						<listheader>
							<term>Name</term>
							<term>Description</term>
						</listheader>
						<item>
							<description>Database</description>
							<description>Database path.</description>
						</item>
						<item>
							<description>User</description>
							<description>User name.</description>
						</item>
						<item>
							<description>Password</description>
							<description>User Password.</description>
						</item>
						<item>
							<description>Dialect</description>
							<description>Database dialect.</description>
						</item>
						<item>
							<description>DataSource.</description>
							<description>Server name.</description>
						</item>
						<item>
							<description>Port</description>
							<description>Port number.</description>
						</item>
						<item>
							<description>Charset</description>
							<description>Database Character Set.</description>
						</item>
						<item>
							<description>PageSize</description>
							<description>Database page size.</description>
						</item>
						<item>
							<description>ForcedWrite</description>
							<description>Create database using froced writes mode.</description>
						</item>
					</list>
				</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.DropDatabase(System.Collections.Hashtable)">
            <summary>
			Drop a existing database.
			</summary><param name="values">Collection of valid keys and values.</param><remarks>
				<para>List of valid keys:</para>
				<para>
					<list type="table">
						<listheader>
							<term>Name</term>
							<term>Description</term>
						</listheader>
						<item>
							<description>Database</description>
							<description>Database path.</description>
						</item>
						<item>
							<description>User</description>
							<description>User name.</description>
						</item>
						<item>
							<description>Password</description>
							<description>User Password.</description>
						</item>
						<item>
							<description>DataSource.</description>
							<description>Server name.</description>
						</item>
						<item>
							<description>Port</description>
							<description>Port number.</description>
						</item>
					</list>
				</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.BeginTransaction">
            <summary>Begins a new transaction with the default isolation level IsolationLevel.ReadCommitted.</summary><returns>An <see cref="T:FirebirdSql.Data.Firebird.FbTransaction"/> object.</returns><exception cref="T:System.InvalidOperationException">
				<para>
					A transaction is currently active. Parallel transactions are not supported.
				</para>
				<para>
					Or the connection is not valid and Open.
				</para>
			</exception><remarks>
			To commit or rollback the transaction, you must explicitly use the <see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Commit"/> or 
			<see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Rollback"/> methods.
			</remarks><example>
				<code>
public void RunFirebirdTransaction(string connectionString)
{
	FbConnection connection = new FbConnection(connectionString);
	connection.Open();

	// Start a new transaction
	FbTransaction transaction = connection.BeginTransaction();;

	// Creates a new FbCommand object
	FbCommand command = new FbCommand();
	command.Connection = connection;
	command.Transaction = transaction;

	try
	{
		command.CommandText = "Insert into Region (RegionID, RegionDescription) VALUES (100, 'Description')";
		command.ExecuteNonQuery();
		command.CommandText = "Insert into Region (RegionID, RegionDescription) VALUES (101, 'Description')";
		command.ExecuteNonQuery();
	    
		transaction.Commit();
	    
		Console.WriteLine("Both records are written to database.");
	}
	catch(Exception e)
	{
		myTrans.Rollback();
		Console.WriteLine(e.ToString());
		Console.WriteLine("Neither record was written to database.");
	}
	finally
	{
		myConnection.Close();
	}
}
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.BeginTransaction(System.String)">
            <summary>Begins a new transaction with the specified name.</summary><param name="transactionName">The name of the transaction.</param><returns>An <see cref="T:FirebirdSql.Data.Firebird.FbTransaction"/> object.</returns><exception cref="T:System.InvalidOperationException">
				<para>A transaction is currently active. Parallel transactions are not supported.</para>
				<para>Or the connection is not valid and Open.</para>
			</exception><remarks>
			To commit or rollback the transaction, you must explicitly use the <see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Commit"/> or 
			<see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Rollback"/> methods.
			</remarks><example>
				<code>
FbConnection connection = new FbConnection(connectionString);
connection.Open();

// Start a new transaction
FbTransaction transaction = myConnection.BeginTransaction();

// Creates a new FbCommand object
FbCommand command = new FbCommand();
command.Connection = connection;
command.Transaction = transaction;

try
{
	command.CommandText = "INSERT INTO PROJECT(proj_id, proj_name, product) Values('FBNP', '.Net Provider', 'N/A')";
	command.ExecuteNonQuery();
	
	transaction.Save("SampleTransaction");
	
	command.CommandText = "INSERT INTO PROJECT(proj_id, proj_name, product) Values('FBN1', '.Net Provider1.', 'N/A')";	
	command.ExecuteNonQuery();
		
	transaction.Commit();
	
	Console.WriteLine("Both records are written to database.");
}
catch(Exception e)
{
	try
	{
		transaction.Rollback("SampleTransaction");
	}
	catch (FbException ex)
	{
		if (transaction.Connection != null)
		{
			Console.WriteLine("An exception of type " + ex.GetType() +
				" was encountered while attempting to roll back the transaction.");
		}
	}

	Console.WriteLine("An exception of type " + e.GetType() + " was encountered while inserting the data.");
	Console.WriteLine("Neither record was written to database.");
}
finally 
{
	connection.Close();
}		
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>Begins a new transaction with the specified isolation level.</summary><param name="level">The isolation level for the transaction.</param><returns>An <see cref="T:FirebirdSql.Data.Firebird.FbTransaction"/> object.</returns><exception cref="T:System.InvalidOperationException">
				<para>A transaction is currently active. Parallel transactions are not supported.</para>
				<para>Or the connection is not valid and Open.</para>
			</exception><remarks>
			To commit or rollback the transaction, you must explicitly use the <see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Commit"/> or 
			<see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Rollback"/> methods.
			</remarks><example>
				<code>
FbConnection connection = new FbConnection(connectionString);
connection.Open();

FbConnection connection = new FbConnection(connectionString);
connection.Open();

// Start a new transaction
FbTransaction transaction = myConnection.BeginTransaction();

// Creates a new FbCommand object
FbCommand command = new FbCommand();
command.Connection = connection;
command.Transaction = transaction;

try
{
    command.CommandText = "Insert into Region (RegionID, RegionDescription) VALUES (100, 'Description')";
    command.ExecuteNonQuery();

    command.CommandText = "Insert into Region (RegionID, RegionDescription) VALUES (101, 'Description')";
    command.ExecuteNonQuery();

    transaction.Commit();

    Console.WriteLine("Both records are written to database.");
}
catch(Exception e)
{
    transaction.Rollback();
    
    Console.WriteLine(e.ToString());
    Console.WriteLine("Neither record was written to database.");
}
finally
{
    connection.Close();
}
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
            <summary>Begins a new transaction with the specified isolation level and transaction name.</summary><param name="level">The isolation for the transaction.</param><param name="transactionName">The name of the transaction.</param><returns>An object representing the new transaction.</returns><exception cref="T:System.InvalidOperationException">
				<para>A transaction is currently active. Parallel transactions are not supported.</para>
				<para>Or the connection is not valid and Open.</para>
			</exception><remarks>
			To commit or rollback the transaction, you must explicitly use the <see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Commit"/> or 
			<see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Rollback(System.String)"/> methods.
			</remarks><example>
				<code>
FbConnection connection = new FbConnection(connectionString);
connection.Open();

// Start a new transaction
FbTransaction transaction = myConnection.BeginTransaction();

// Creates a new FbCommand object
FbCommand command = new FbCommand();
command.Connection = connection;
command.Transaction = transaction;

try
{
	command.CommandText = "INSERT INTO PROJECT(proj_id, proj_name, product) Values('FBNP', '.Net Provider', 'N/A')";
	command.ExecuteNonQuery();
	
	transaction.Save("SampleTransaction");
	
	command.CommandText = "INSERT INTO PROJECT(proj_id, proj_name, product) Values('FBN1', '.Net Provider1.', 'N/A')";
	command.ExecuteNonQuery();
	
	transaction.Commit();
	Console.WriteLine("Both records are written to database.");
}
catch(Exception e)
{
	try
	{
		transaction.Rollback("SampleTransaction");
	}
	catch (FbException ex)
	{
		if (transaction.Connection != null)
		{
			Console.WriteLine("An exception of type " + ex.GetType() + " was encountered while attempting to roll back the transaction.");
		}
	}

	Console.WriteLine("An exception of type " + e.GetType() + " was encountered while inserting the data.");
	Console.WriteLine("Neither record was written to database.");
}
finally 
{
	connection.Close();
}		
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.BeginTransaction(FirebirdSql.Data.Firebird.FbTransactionOptions)">
            <summary>Begins a new transaction using the specified options.</summary><returns>An <see cref="T:FirebirdSql.Data.Firebird.FbTransaction"/> object.</returns><exception cref="T:System.InvalidOperationException">
				<para>
					A transaction is currently active. Parallel transactions are not supported.
				</para>
				<para>
					Or the connection is not valid and Open.
				</para>
			</exception><param name="options">A <see cref="T:FirebirdSql.Data.Firebird.FbTransactionOptions">FbTransactionOptions</see> value.</param><remarks>
			To commit or rollback the transaction, you must explicitly use the <see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Commit"/> or 
			<see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Rollback"/> methods.
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.BeginTransaction(FirebirdSql.Data.Firebird.FbTransactionOptions,System.String)">
            <summary>Begins a new transaction using the specified options and transaction name.</summary><returns>An <see cref="T:FirebirdSql.Data.Firebird.FbTransaction"/> object.</returns><exception cref="T:System.InvalidOperationException">
				<para>
					A transaction is currently active. Parallel transactions are not supported.
				</para>
				<para>
					Or the connection is not valid and Open.
				</para>
			</exception><param name="options">A <see cref="T:FirebirdSql.Data.Firebird.FbTransactionOptions">FbTransactionOptions</see> value.</param><param name="transactionName">The name of the transaction.</param><remarks>
			To commit or rollback the transaction, you must explicitly use the <see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Commit"/> or 
			<see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Rollback(System.String)"/> methods.
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.ChangeDatabase(System.String)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbConnection.xml" path="doc/class[@name=&quot;FbConnection&quot;]/method[@name=&quot;ChangeDatabase(System.String)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.Open">
            <summary>
			Opens a new connection to a database with the property settings specified by the <see cref="P:FirebirdSql.Data.Firebird.FbConnection.ConnectionString"/>.
			</summary><remarks>
				<para>
				The <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> draws an open connection from the connection pool if one is
				available. Otherwise, it establishes a new connection to the database.
				</para>
				<para>
					<b>Note:</b>
				</para>
				<para>
				If a <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> object goes out of scope, the connection it represents does not 
				close automatically, you need to explicitly close the connection by calling <see cref="M:FirebirdSql.Data.Firebird.FbConnection.Close"/> or <see cref="M:FirebirdSql.Data.Firebird.FbConnection.Dispose(System.Boolean)"/> methods.
				</para>
			</remarks><exception cref="T:System.InvalidOperationException">The connection is already open.</exception><exception cref="T:System.ArgumentException">If Connection string is not valid.</exception><exception cref="T:FirebirdSql.Data.Firebird.FbException">A connection-level error occurred while opening the connection.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.Close">
            <summary>
			Closes the connection to the database. This is the preferred method of closing any open connection.
			</summary><remarks>
				<para>
				The <see cref="M:FirebirdSql.Data.Firebird.FbConnection.Close"/> method rolls back any pending transactions and drops active statments. It then releases 
				the connection to the connection pool, or closes the connection if connection pooling is disabled. 
				If Close is called while handling a <see cref="E:FirebirdSql.Data.Firebird.FbConnection.StateChange"/> event, no additional <see cref="E:FirebirdSql.Data.Firebird.FbConnection.StateChange"/> events are fired.
				</para>
				<para>
				<see cref="M:FirebirdSql.Data.Firebird.FbConnection.Close"/> can be called more than one time without generating an exception.
				</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.CreateCommand">
            <summary>
			Creates and returns a new <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object associated with the current <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> object.
			</summary><returns>A new <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.GetSchema">
            <summary>
			Returns information about the MetaDataCollections schema.
			</summary><returns>DataTable with the MetaDataCollections information.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.GetSchema(System.String)">
            <summary>
			Returns information about a specific metadata collection.
			</summary><para name="collectionName">The metadata collection name.</para><returns>DataTable with the speficied schema information.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.GetSchema(System.String,System.String[])">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbConnection.xml" path="doc/class[@name=&quot;FbConnection&quot;]/method[@name=&quot;GetSchema(System.String, System.String[])&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnection.GetDbSchemaTable(FirebirdSql.Data.Firebird.FbDbSchemaType,System.Object[])">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbConnection.xml" path="doc/class[@name=&quot;FbConnection&quot;]/method[@name=&quot;GetDbSchemaTable&quot;]/*"/>
        </member>
        <member name="E:FirebirdSql.Data.Firebird.FbConnection.StateChange">
            <summary>Occurs when the state of the connection changes.</summary><remarks>
				<para>The <see cref="E:FirebirdSql.Data.Firebird.FbConnection.StateChange"/> event is raised when the connection state changes
				from Closed to Opened, or from Opened to Closed.
				</para>
			</remarks><data>
				<list type="table">
					<listheader>
						<term>Property</term>
						<term>Description</term>
					</listheader>
					<item>
						<description>CurrentState</description>
						<description>The new state of the connection.</description>
					</item>
					<item>
						<description>OriginalState</description>
						<description>The original state of the connection.</description>
					</item>
				</list>
			</data>
        </member>
        <member name="E:FirebirdSql.Data.Firebird.FbConnection.InfoMessage">
            <summary>
			Occurs when the Firebird Server sends a warning message.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnection.ConnectionString">
            <summary>
			Gets or sets the string used to open a connection to a Firebird database.
			</summary><value>
			The connection string that includes the source database path and name, and other 
			parameters needed to establish the initial connection. The default value is an empty string.
			</value><exception cref="T:System.ArgumentException">An invalid connection string argument has been supplied or a required connection string argument has not been supplied.</exception><remarks>
				<para>
					The following table lists the valid names for keyword values for
					<b>ConnectionString</b> property.
				</para>
				<para>
					<list type="table">
						<listheader>
							<term>Name</term>
							<term>Description</term>
							<term>Default</term>
						</listheader>
						<item>
							<description>Database</description>
							<description>Database path to establish the connection.</description>
							<description/>
						</item>
						<item>
							<description>User</description>
							<description>Firebird User account for login.</description>
							<description/>
						</item>
						<item>
							<description>Password</description>
							<description>Password for the Firebird user account.</description>
							<description/>
						</item>
						<item>
							<description>Dialect</description>
							<description>Database dialect.</description>
							<description>3</description>
						</item>
						<item>
							<description>Server or Data Source.</description>
							<description>Server name for establish the connection.</description>
							<description></description>
						</item>
						<item>
							<description>Port</description>
							<description>Port number in the server for establish the connection.</description>
							<description>3050</description>
						</item>
						<item>
							<description>Charset</description>
							<description>Database Character Set.</description>
							<description>NONE</description>
						</item>
						<item>
							<description>Role</description>
							<description>User Role.</description>
							<description/>
						</item>
						<item>
							<description>Packet Size</description>
							<description>Size (in bytes) of network packets used to communicate with an instance of Firebird Server.</description>
							<description>8192</description>
						</item>
						<item>
							<description>Connection Lifetime</description>
							<description>
							When a connection is returned to the pool, its creation time is compared with the current time, and the connection is destroyed
							if that time span (in seconds) exceeds the value specified by connection lifetime.
							</description>
							<description>0</description>
						</item>
						<item>
							<description>MinPoolSize</description>
							<description>
							The minimun number of connections allowed in the pool.
							</description>
							<description>
						 0
							</description>
						</item>
						<item>
							<description>MaxPoolSize</description>
							<description>
							The maximun number of connections allowed in the pool.
							</description>
							<description>
							100
							</description>
						</item>
						<item>
							<description>Pooling</description>
							<description>
							When <b>true</b>, the <b>FbConnection</b> object is drawn from the appropriate 
							pool, or if necessary, is created and added to the appropriate pool. Recognized 
							values are <b>true</b>, <b>false</b>, <b>yes</b>, and <b>no</b>.
							</description>
							<description>true</description>
						</item>
						<item>
							<description>Fetch Size</description>
							<description>Indicates the number of rows that will be fetched at the same time on <see cref="M:FirebirdSql.Data.Firebird.FbDataReader.Read"/> calls into the internal row buffer.</description>
                        </item>
						<item>
							<description>ServerType</description>
							<description>
							When <b>0</b> the provider will use the GDS implementation
							used for connections to Firebird Super or Classic servers, when
							<b>1</b> the provider will use the GDS implementation used
							for connections to the Firebird embedded server.
							</description>
							<description>0</description>
						</item>
					</list>
				</para>
				<para>
				The following table lists the valid names for the <b>Charset</b> keyword of the 
				<b>ConnectionString</b>:
				</para>
				<para>
					<list type="table">
						<listheader>
							<term>Firebird Charset</term>
							<term>Description</term>
						</listheader>
						<item>
							<description>ASCII</description>
							<description>American Standard Code for Information Interchange.</description>
						</item>
						<item>
							<description>BIG_5</description>
							<description>Big5, Traditional Chinese.</description>
						</item>
						<item>
							<description>DOS437</description>
							<description>MS-DOS United States, Australia, New Zealand, South Africa.</description>
						</item>
						<item>
							<description>DOS850</description>
							<description>MS-DOS Latin-1.</description>
						</item>
						<item>
							<description>DOS860</description>
							<description>MS-DOS Portugues.</description>
						</item>
						<item>
							<description>DOS861</description>
							<description>MS-DOS Icelandic.</description>
						</item>
						<item>
							<description>DOS863</description>
							<description>MS-DOS Canadian French.</description>
						</item>
						<item>
							<description>DOS865</description>
							<description>MS-DOS Nordic.</description>
						</item>
						<item>
							<description>EUCJ_0208</description>
							<description>JIS X 0201, 0208, 0212, EUC encoding, Japanese.</description>
						</item>
						<item>
							<description>GB_2312</description>
							<description>GB2312, EUC encoding, Simplified Chinese.</description>
						</item>
						<item>
							<description>ISO8859_1</description>
							<description>ISO 8859-1, Latin alphabet No. 1.</description>
						</item>
						<item>
							<description>ISO8859_2</description>
							<description>ISO 8859-2, Latin alphabet No. 2.</description>
						</item>
						<item>
							<description>KSC_5601</description>
							<description>Windows Korean.</description>
						</item>
						<item>
							<description>ISO2022-JP</description>
							<description>Windows Japanese.</description>
						</item>
						<item>
							<description>SJIS_0208</description>
							<description>Japanese (Shift-JIS)</description>
						</item>
						<item>
							<description>UNICODE_FSS</description>
							<description>Eight-bit Unicode Transformation Format.</description>
						</item>
						<item>
							<description>WIN1250</description>
							<description>Windows Eastern European.</description>
						</item>
						<item>
							<description>WIN1251</description>
							<description>Windows Cyrillic.</description>
						</item>
						<item>
							<description>WIN1252</description>
							<description>Windows Latin-1.</description>
						</item>
						<item>
							<description>WIN1253</description>
							<description>Windows Greek.</description>
						</item>
						<item>
							<description>WIN1254</description>
							<description>Windows Turkish.</description>
						</item>
						<item>
							<description>WIN1254</description>
							<description>Windows Hebrew.</description>
						</item>
						<item>
							<description>Arabic</description>
							<description>Windows Turkish.</description>
						</item>
						<item>
							<description>WIN1257</description>
							<description>Windows Baltic.</description>
						</item>
					</list>
				</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnection.ConnectionTimeout">
            <summary>
			Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.
			</summary><value>
			The time (in seconds) to wait for a connection to open. The default value is 0 seconds.
			</value><remarks>
				<para>A value of <b>0</b> indicates no limit.</para>
				<para>
					<b>Not currently supported.</b>
				</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnection.Database">
            <summary>
			Gets the name of the actual database or the database to be used when a connection is open.
			</summary><value>
			The name of the actual database or the database to be used when a connection is open. The default value is an empty string.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnection.DataSource">
            <summary>
			Gets the name of the Firebird Server to which to connect.
			</summary><value>
			The name of the Firebird Server to which to connect. The default value is an empty string.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnection.ServerVersion">
            <summary>
			Gets a string containing the version of the Firebird Server to which the client is connected.
			</summary><exception cref="T:System.InvalidOperationException">The connection is closed.</exception><value>
			The version of the Firebird Server to which the client is connected.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnection.State">
            <summary>
			Gets the current state of the connection.
			</summary><value>
			One of the <b>System.Data.ConnectionState</b> values. The default is <b>Closed</b>.
			</value><remarks>
				<para>The allowed state changes are: </para>
				<para>
					<list type="bullet">
						<item>
							<description>
							From <b>Closed</b> to <b>Open</b>, using the <see cref="M:FirebirdSql.Data.Firebird.FbConnection.Open"/> method. 
							</description>
						</item>
						<item>
							<description>
							From <b>Open</b> to <b>Closed</b>, using the <see cref="M:FirebirdSql.Data.Firebird.FbConnection.Close"/> method or the
							<see cref="M:FirebirdSql.Data.Firebird.FbConnection.Dispose(System.Boolean)"/> method. 
							</description>
						</item>
					</list>
				</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnection.PacketSize">
            <summary>	
			Gets the size (in bytes) of network packets used to communicate with an instance of Firebird Server.
			</summary><value>The size (in bytes) of network packets. The default value is 8192.</value><remarks>
				<para>
				<b>PacketSize</b> may be in the rane 512-32767 bytes. 
				An exception is generated if the value is outside of this range.
				</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnection.ConnectionPoolsCount">
            <summary>
			Gets the number of active connection pools.
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbConnectionStringBuilder">
            <summary>
			Allows handling of the connection strings. See <see cref="P:FirebirdSql.Data.Firebird.FbConnection.ConnectionString"/>
			</summary><example>
				The following example builds a connection string and prints it in the console.
				<code>
FbConnectionStringBuilder cs = new FbConnectionStringBuilder();

cs.DataSource = "localhost";
cs.UserID	 = "SYSDBA";
cs.Password	 = "masterkey";
cs.Database	 = "nunit_testdb";
cs.Port		 = 3050;
cs.Charset	 = "UNICODE_FSS";
cs.Pooling	 = true;
cs.ConnectionLifeTime = 30;
// To use the embedded server set the ServerType to 1
cs.ServerType = 0;

Console.WriteLine(cs.ToString());
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.#ctor">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbConnectionStringBuilder"/> class.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.#ctor(System.String)">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbConnectionStringBuilder"/> class with
			the specified connection string.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.ToString">
            <summary>
            Overrided method, returns the Firebird connection string.
            </summary>
            <returns>The Firebird connection string.</returns>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.ConnectionString">
            <summary>Gets or sets the connection string.</summary><value>The connection string.</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.UserID">
            <summary>Gets or sets the firebird User account for login.</summary><value>The user name.</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.Password">
            <summary>Gets ort sets the password for the Firebird user account.</summary><value>The user password.</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.DataSource">
            <summary>
			Gets the name of the Firebird Server to which to connect.
			</summary><value>
			The name of the Firebird Server to which to connect. The default value is an empty string.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.Port">
            <summary>
			Gets or sets the port number in the server for establish the connection
			</summary><value>The port number.</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.Database">
            <summary>
			Gets the name of the actual database or the database to be used when a connection is open.
			</summary><value>
			The name of the actual database or the database to be used when a connection is open. The default value is an empty string.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.PacketSize">
            <summary>	
			Gets or sets the size (in bytes) of network packets used to communicate with an instance of Firebird Server.
			</summary><value>The size (in bytes) of network packets. The default value is 8192.</value><remarks>
				<para>
				<b>PacketSize</b> may be in the rane 512-32767 bytes. 
				An exception is generated if the value is outside of this range.
				</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.Role">
            <summary>Gets or sets the suer role name.</summary><value>The user role</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.Dialect">
            <summary>	
			Gets or sets the database dialect.
			</summary><value>The database dialect. Default value is 3.</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.Charset">
            <summary>Gets or sets the connection character set.</summary><value>The connection character set</value><remarks>
				<para>
					<list type="table">
						<listheader>
							<term>Firebird Charset</term>
							<term>Description</term>
						</listheader>
						<item>
							<description>ASCII</description>
							<description>American Standard Code for Information Interchange.</description>
						</item>
						<item>
							<description>BIG_5</description>
							<description>Big5, Traditional Chinese.</description>
						</item>
						<item>
							<description>DOS437</description>
							<description>MS-DOS United States, Australia, New Zealand, South Africa.</description>
						</item>
						<item>
							<description>DOS850</description>
							<description>MS-DOS Latin-1.</description>
						</item>
						<item>
							<description>DOS860</description>
							<description>MS-DOS Portugues.</description>
						</item>
						<item>
							<description>DOS861</description>
							<description>MS-DOS Icelandic.</description>
						</item>
						<item>
							<description>DOS863</description>
							<description>MS-DOS Canadian French.</description>
						</item>
						<item>
							<description>DOS865</description>
							<description>MS-DOS Nordic.</description>
						</item>
						<item>
							<description>EUCJ_0208</description>
							<description>JIS X 0201, 0208, 0212, EUC encoding, Japanese.</description>
						</item>
						<item>
							<description>GB_2312</description>
							<description>GB2312, EUC encoding, Simplified Chinese.</description>
						</item>
						<item>
							<description>ISO8859_1</description>
							<description>ISO 8859-1, Latin alphabet No. 1.</description>
						</item>
						<item>
							<description>ISO8859_2</description>
							<description>ISO 8859-2, Latin alphabet No. 2.</description>
						</item>
						<item>
							<description>KSC_5601</description>
							<description>Windows Korean.</description>
						</item>
						<item>
							<description>ISO2022-JP</description>
							<description>Windows Japanese.</description>
						</item>
						<item>
							<description>SJIS_0208</description>
							<description>Japanese (Shift-JIS)</description>
						</item>
						<item>
							<description>UNICODE_FSS</description>
							<description>Eight-bit Unicode Transformation Format.</description>
						</item>
						<item>
							<description>WIN1250</description>
							<description>Windows Eastern European.</description>
						</item>
						<item>
							<description>WIN1251</description>
							<description>Windows Cyrillic.</description>
						</item>
						<item>
							<description>WIN1252</description>
							<description>Windows Latin-1.</description>
						</item>
						<item>
							<description>WIN1253</description>
							<description>Windows Greek.</description>
						</item>
						<item>
							<description>WIN1254</description>
							<description>Windows Turkish.</description>
						</item>
						<item>
							<description>WIN1254</description>
							<description>Windows Hebrew.</description>
						</item>
						<item>
							<description>Arabic</description>
							<description>Windows Turkish.</description>
						</item>
						<item>
							<description>WIN1257</description>
							<description>Windows Baltic.</description>
						</item>
					</list>
				</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.ConnectionTimeout">
            <summary>
			Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.
			</summary><value>
			The time (in seconds) to wait for a connection to open. The default value is 0 seconds.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.Pooling">
            <summary>
			Gets or sets the status of the connection pooling (enabled/disabled).
			</summary><value>
			When <b>true</b>, the <b>FbConnection</b> object is drawn from the appropriate 
			pool, or if necessary, is created and added to the appropriate pool. Recognized 
			values are <b>true</b>, <b>false</b>, <b>yes</b>, and <b>no</b>.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.ConnectionLifeTime">
            <summary>
			Gets or sets the lifetime of a connection in the pool.
			</summary><value>
			When a connection is returned to the pool, its creation time is compared with the current time, and the connection is destroyed
			if that time span (in seconds) exceeds the value specified by connection lifetime.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.MinPoolSize">
            <summary>Gets or sets the minumun pool size.</summary><value>The minimun number of connections allowed in the pool. Default is 0.</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.MaxPoolSize">
            <summary>Gets or sets the maximun pool size.</summary><value>The maximun number of connections allowed in the pool. Default is 100.</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.FetchSize">
            <summary>Indicates the number of rows that will be fetched at the same time on <see cref="M:FirebirdSql.Data.Firebird.FbDataReader.Read"/> calls into the internal row buffer.</summary><value>The maximun number of rows to be fetched in a single call to <see cref="M:FirebirdSql.Data.Firebird.FbDataReader.Read"/> into the internal row buffer.</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.ServerType">
            <summary>Gets or sets the server type to wich we want to connect.</summary><value>The default value is 0.</value><remarks>
			When <b>0</b> the provider will use the GDS implementation
			used for connections to Firebird Super or Classic servers, when
			<b>1</b> the provider will use the GDS implementation used
			for connections to the Firebird embedded server.
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbConnectionStringBuilder.IsolationLevel">
            <summary>Gets or sets the default Isolation Leve for implicit transactions.</summary><value>An IsolationLevel.</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbDataAdapter">
            <summary>
			Represents a set of data commands and a connection to a data source that are 
			used to fill the <b>DataSet</b> and update the data source. 
			This class cannot be inherited.
			</summary><remarks>
			<para>
			The <b>FbDataAdapter</b>, serves as a bridge between a <b>DataSet</b> and FirebirdSQL for retrieving and saving data. 
			The <b>FbDataAdapter</b> provides this bridge by mapping <b>Fill</b>, which changes the data in the <b>DataSet</b> to 
			match the data in the data source, and <b>Update</b>, which changes the data in the data source to match the data in 
			the <b>DataSet</b>, using the appropriate DSQL statements against the data source.
			</para>
			<para>
			<b>FbDataAdapter</b> is used in conjunction with <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> and <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> 
			to increase performance when connecting to a FirebirdSQL Server database. 
			</para>
			<para>
			The <b>FbDataAdapter</b> also includes the <see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.SelectCommand"/>, <see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.InsertCommand"/>, 
			<see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.DeleteCommand"/>, <see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.UpdateCommand">UpdateCommand</see>, and <b>TableMappings</b> properties to facilitate 
			the loading and updating of data.
			</para>
			<para>
			When an instance of <b>FbDataAdapter</b> is created, the read/write properties are set to initial values. 
			</para>	    
			</remarks><example>
				<code>    
public static void CreateFbDataAdapter() 
{
    FbConnection	conn = new FbConnection("Database=C:\\PROGRAM FILES\\FIREBIRD\\EXAMPLES\\EMPLOYEE.GDB;User=SYSDBA;Password=masterkey;Dialect=3;Server=localhost");
    FbDataAdapter	custDA = new FbDataAdapter();
    FbTransaction	txn	 = conn.BeginTransaction();

    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;
   
    custDA.SelectCommand = new FbCommand("SELECT custno, customer FROM CUSTOMER", conn, txn);
    custDA.InsertCommand = new FbCommand("INSERT INTO customer (CustomerID, customer) " +
                                            "VALUES (?, ?)", conn, txn);
    custDA.UpdateCommand = new FbCommand("UPDATE customer SET custno = ?, customer = ? " +
                                            "WHERE custno = ?", conn, txn);
    custDA.DeleteCommand = new FbCommand("DELETE FROM customer WHERE custno = ?", conn, txn);

    custDA.InsertCommand.Parameters.Add("@custno", FbDbType.Int32, 4, "custno");
    custDA.InsertCommand.Parameters.Add("@customer", FbDbType.VarChar, 25, "customer");
 
    custDA.UpdateCommand.Parameters.Add("@custno", FbDbType.Int32, 4, "custno");
    custDA.UpdateCommand.Parameters.Add("@customer", FbDbType.VarChar, 25, "customer");
    custDA.UpdateCommand.Parameters.Add("@oldcustno", FbDbType.Int32, 4, "custno").SourceVersion = DataRowVersion.Original;

    custDA.DeleteCommand.Parameters.Add("@oldcustno", FbDbType.Int32, 4, "custno").SourceVersion = DataRowVersion.Original;
}    	
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataAdapter.#ctor">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> class.
			</summary><remarks>
			When you create an instance of <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>, the following read/write properties 
			are set to their default values, as shown in the table.
			<list type="table">
				<listheader>
					<term>Properties</term>
					<term>Default Value</term>
				</listheader>
				<item>
					<description>MissingMappingAction</description>
					<description>MissingMappingAction.Passthrough</description>
				</item>
				<item>
					<description>MissingSchemaAction</description>
					<description>MissingSchemaAction.Add</description>		
				</item>
			</list>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataAdapter.#ctor(FirebirdSql.Data.Firebird.FbCommand)">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> class with the specified SQL SELECT statement.
			</summary><param name="selectCommand">
			An <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> that is an SQL SELECT statement or stored procedure, and is set as the 
			<see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.SelectCommand"/> property of the <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>.    
			</param><remarks>
			When you create an instance of <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>, the following read/write properties 
			are set to their default values, as shown in the table.
			<list type="table">
				<listheader>
					<term>Properties</term>
					<term>Default Value</term>
				</listheader>
				<item>
					<description>MissingMappingAction</description>
					<description>MissingMappingAction.Passthrough</description>
				</item>
				<item>
					<description>MissingSchemaAction</description>
					<description>MissingSchemaAction.Add</description>		
				</item>
			</list>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataAdapter.#ctor(System.String,FirebirdSql.Data.Firebird.FbConnection)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbDataAdapter.xml" path="doc/class[@name=&quot;FbDataAdapter&quot;]/constructor[@name=&quot;ctor(System.String,FbConnection)&quot;]/*"/>		
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataAdapter.#ctor(System.String,System.String)">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> class with an SQL SELECT statement and a connection string.
			</summary><param name="selectCommandText">
			A string that is a SQL SELECT statement or stored procedure to be used by the 
			<see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.SelectCommand"/> property of the <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>. 
			</param><param name="selectConnectionString">
			The connection string. 
			</param><remarks>
			When you create an instance of <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>, the following read/write properties 
			are set to their default values, as shown in the table.
			<list type="table">
				<listheader>
					<term>Properties</term>
					<term>Default Value</term>
				</listheader>
				<item>
					<description>MissingMappingAction</description>
					<description>MissingMappingAction.Passthrough</description>
				</item>
				<item>
					<description>MissingSchemaAction</description>
					<description>MissingSchemaAction.Add</description>		
				</item>
			</list>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataAdapter.Dispose(System.Boolean)">
            <summary>
			Releases the unmanaged and, optionally, the managed resources used by the <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/> object.
			</summary><param name="disposing">
			True for dispose managed and unmanaged resources and false for dispose 
			anly the unmanaged resources.
			</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>Creates a new instance of the RowUpdatingEventArgs class.</summary><param name="dataRow">The DataRow used to update the data source. </param><param name="command">The <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> executed during the update operation. </param><param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement. </param><param name="tableMapping"> DataTableMapping object. </param><returns>A new instance of the System.Data.Common.RowUpdatingEventArgs class.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
			Creates a new instance of the RowUpdatedEventArgs class, regardless of whether the update is successful.
			</summary><param name="dataRow">The DataRow used to update the data source. </param><param name="command">The <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> executed during the update operation. </param><param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement. </param><param name="tableMapping">DataTableMapping object. </param><returns>A new instance of the System.Data.Common.RowUpdatedEventArgs class.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
            <summary>
			Raises the RowUpdating event using a RowUpdatingEventArgs object, whether or not the update operation is successful.
			</summary><value>
			A System.Data.Common.RowUpdatingEventArgs object that contains the event data. 
			</value>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
            <summary>
			Raises the RowUpdated event using a RowUpdatedEventArgs object.
			</summary><value>
			A System.Data.Common.RowUpdatedEventArgs object that contains the event data. 
			</value>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
            <summary>
            Review .NET	Framework documentation.
            </summary>
        </member>
        <member name="E:FirebirdSql.Data.Firebird.FbDataAdapter.RowUpdated">
            <summary>
			Occurs during an Update operation after a command is executed against the 
			data source.
			</summary>
        </member>
        <member name="E:FirebirdSql.Data.Firebird.FbDataAdapter.RowUpdating">
            <summary>
			Occurs during an Update operation before a command is executed against the data source.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataAdapter.SelectCommand">
            <summary>
			Gets or sets an SQL statement or stored procedure used to select records
			in the data source.
			</summary><value>
			An <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> that is used during a fill operation to select records from 
			data source for placement in the <b>DataSet</b>.
			</value><remarks>	
			<para>
			When <b>SelectCommand</b> is assigned to a previously created <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/>, 
			the <b>FbCommand</b> is not cloned. The <b>SelectCommand</b> maintains a reference 
			to the previously created <b>FbCommand</b> object.
			</para>
			<para>
			If the <b>SelectCommand</b> does not return any rows, no tables are added to 
			the <b>DataSet</b>, and no exception is raised.    
			</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataAdapter.InsertCommand">
            <summary>
			Gets or sets an SQL statement or stored procedure used to 
			insert new records into the data source.
			</summary><value>
			An <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> used during an update operation to insert records in 
			the data source that correspond to new rows in the <b>DataSet</b>.
			</value><remarks>
			<para>
			During <b>Update</b>, if this property is not set and primary key information is present in the 
			<b>DataSet</b>, the <b>InsertCommand</b> can be generated automatically if you set the 
			<see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.SelectCommand"/> property and use the 
			<see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder"/>. 
			Then, any additional commands that you do not set are generated by the 
			<b>FbCommandBuilder</b>. This generation logic requires key column information 
			to be present in the <b>DataSet</b>.
			</para>
			<para>
			When <b>InsertCommand</b> is assigned to a previously created <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/>, the 
			<b>FbCommand</b> is not cloned. The <b>InsertCommand</b> maintains a reference 
			to the previously created <b>FbCommand</b> object.
			</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataAdapter.UpdateCommand">
            <summary>
			Gets or sets an SQL statement or stored procedure used to update records 
			in the data source.
			</summary><value>
			An <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> used during an update operation to update records in the 
			data source that correspond to modified rows in the <b>DataSet</b>.
			</value><remarks>
			<para>
			During <b>Update</b>, if this property is not set and primary key information is present in the 
			<b>DataSet</b>, the <b>UpdateCommand</b> can be generated automatically if you set the 
			<see cref="P:FirebirdSql.Data.Firebird.FbDataAdapter.SelectCommand"/> property and use the 
			<see cref="T:FirebirdSql.Data.Firebird.FbCommandBuilder"/>. 
			Then, any additional commands that you do not set are generated by the 
			<b>FbCommandBuilder</b>. This generation logic requires key column information 
			to be present in the <b>DataSet</b>.
			</para>
			<para>
			When <b>UpdateCommand</b> is assigned to a previously created <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/>, the 
			<b>FbCommand</b> is not cloned. The <b>UpdateCommand</b> maintains a reference 
			to the previously created <b>FbCommand</b> object.
			</para>
			</remarks>		
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataAdapter.DeleteCommand">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbDataAdapter.xml" path="doc/class[@name=&quot;FbDataAdapter&quot;]/property[@name=&quot;DeleteCommand&quot;]/*"/>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbDatabaseInfo">
            <summary>
			Reports requested information about a attached database. This class cannot be inherited.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDatabaseInfo.#ctor">
            <summary>
			Creates a new instance of the <b>FbDatabaseInfo</b> class.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDatabaseInfo.#ctor(FirebirdSql.Data.Firebird.FbConnection)">
            <summary>
			Creates a new instance of the <b>FbDatabaseInfo</b> class with an <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> object.
			</summary><param name="connection">An <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> object.</param>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.Connection">
            <summary>
			Gets or sets the <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> used by this instance of the <see cref="T:FirebirdSql.Data.Firebird.FbDatabaseInfo">FbDataseInfo</see>.
			</summary><value>The connection to a data source. The default is a null value.</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.IscVersion">
            <summary>
			Gets the version identification string of the database implementation.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.ServerVersion">
            <summary>
			Gets the version identification string of the Firebird Server.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.ServerClass">
            <summary>
			Gets wheter Firebird Server is a Super or Classic server.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.PageSize">
            <summary>
			Gets the page size of the database.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.AllocationPages">
            <summary>
			Gets the number of database pages allocated.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.BaseLevel">
            <summary>
			Gets the database version (level) number.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.DbId">
            <summary>
			Gets the database file name and site name.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.Implementation">
            <summary>
			Gets the database implementation number.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.NoReserve">
            <summary>
			Gets the indicates if space is reserved on each database page for holding.
			</summary><value>
			<b>true</b> if the space is reserved; <b>false</b> if not.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.OdsVersion">
            <summary>
			Gets the ODS major version number.
			</summary><remarks>
				<p>
				• Databases with different major version numbers have different
				physical layouts; a database engine can only access databases
				with a particular ODS major version number.
				</p>
				<p>
				• Trying to attach to a database with a different ODS number
				results in an error.
				</p>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.OdsMinorVersion">
            <summary>
			Gets the On-disk structure (ODS) minor version number.
			</summary><remarks>
			An increase in a minor version number indicates a non-structural change, 
			one that still allows the database to be accessed by database engines with
			the same major version number but possibly different minor version numbers.
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.MaxMemory">
            <summary>
			Gets the Maximum amount of memory (in bytes) used at one time since the first process attached to the database.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.CurrentMemory">
            <summary>
			Gets the Amount of server memory (in bytes) currently in use.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.ForcedWrites">
            <summary>
			Gets the mode in which database writes are performed.
			</summary><value>
			<b>true</b> if database is in forced writes mode; <b>false</b> if not.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.NumBuffers">
            <summary>
			Gets the number of memory buffers currently allocated.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.SweepInterval">
            <summary>
			Gets the number of transactions that are committed between “sweeps” to
			remove database record versions that are no longer needed.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.ReadOnly">
            <summary>
			Gets wheter database is in readonly mode.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.Fetches">
            <summary>
			Gets the number of reads from the memory buffer cache.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.Marks">
            <summary>
			Gets the number of writes to the memory buffer cache.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.Reads">
            <summary>
			Gets the number of page reads.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.Writes">
            <summary>
			Gets the number of page writes.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.BackoutCount">
            <summary>
			Gets the number of removals of a version of a record.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.DeleteCount">
            <summary>
			Gets the number of database deletes since the database was last attached.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.ExpungeCount">
            <summary>
			Gets the number of removals of a record and all of its ancestors, for records
			hose deletions have been committed.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.InsertCount">
            <summary>
			Gets the number of inserts into the database since the database was last attached.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.PurgeCount">
            <summary>
			Gets the number of removals of old versions of fully mature records.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.ReadIdxCount">
            <summary>
			Gets the number of reads done via an index since the database was last attached.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.ReadSeqCount">
            <summary>	
			Gets the number of sequential sequential table scans (row reads) done on each 
			table since the database was last attached.	
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.UpdateCount">
            <summary>
			Gets the number of database updates since the database was last attached.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.DatabaseSizeInPages">
            <summary>
			Gets the database size in pages.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.OldestTransaction">
            <summary>
			Gets the number of the oldest transaction.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.OldestActiveTransaction">
            <summary>
			Gets the number of the oldest active transaction.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.OldestActiveSnapshot">
            <summary>
			Gets the number of the oldest snapshot transaction.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.NextTransaction">
            <summary>
			Gets the number of the next transction.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.ActiveTransactions">
            <summary>
			Gets the number of active transction.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDatabaseInfo.ActiveUsers">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbDatabaseInfo.xml" path="doc/class[@name=&quot;FbDatabaseInfo&quot;]/property[@name=&quot;ActiveUsers&quot;]/*"/>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbDataReader">
            <summary>
			Provides a Way for reading a forward-only stream of rows. This class cannot be inherited.
			</summary><remarks>
				<para>
				This class cannot be instatiated directly, to create a <b>FbDataReader</b>, you need to call
				the <see cref="M:FirebirdSql.Data.Firebird.FbCommand.ExecuteReader"/> method of a <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> object.
				</para>
				<para>
				Until the <b>FbDataReader</b> is closed using the <see cref="M:FirebirdSql.Data.Firebird.FbDataReader.Close"/> method
				of of the <b>FbDataReader</b>, the associated <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> is busy
				busy serving the <b>FbDataReader</b>, and no other operations can be performed 
				on the <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> other than closing it. This is the case until the 
				<see cref="M:FirebirdSql.Data.Firebird.FbDataReader.Close"/> method is called.
				</para>
				<para>
				To retrieve output parameters you must close the <b>FbDataReader</b>.
				</para>
				<para>
				<see cref="P:FirebirdSql.Data.Firebird.FbDataReader.IsClosed"/> and <see cref="P:FirebirdSql.Data.Firebird.FbDataReader.RecordsAffected"/>
				are the only properties that you can call after the <b>FbDataReader</b> is closed.
				</para>
			</remarks><example>
				<code>
public void ReadMyData(string myConnString) 
{
	string mySelectQuery = "SELECT dept_no, departament FROM departament";
	
	FbConnection	myConnection = new FblConnection(myConnString);
	myConnection.Open();
	
	FbTransaction	myTxn		 = myConnection.BeginTransaction();
	FbCommand		myCommand    = new FbCommand(mySelectQuery, myConnection, myTxn);
	        
	FbDataReader myReader;
	myReader = myCommand.ExecuteReader();
	
	// Always call Read before accessing data.
	while (myReader.Read()) 
	{
	Console.WriteLine(myReader.GetInt32(0) + ", " + myReader.GetString(1));
	}
	
	// always call Close when done reading.
	myReader.Close();
	
	// Close the connection when done with it.
	myConnection.Close();
}    
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.Finalize">
            <summary>
			Attempt to free resources and perform other cleanup operations before the <b>Object</b> is reclaimed by garbage collection.	
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.Close">
            <summary>
			Closes the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> object.
			</summary><remarks>
				<para>
				You must explicitly call the <b>Close</b> method when you are 
				using the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> to use the associated
				<see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> for any other purpose.
				</para>
				<para>
				The <b>Close</b> method fills in the values for output parameters, return 
				values, increasing the amount of time it takes to 
				close a <b>FbDataReader</b>.
				</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.NextResult">
            <summary>
			Advances to the next result, when reading the results of batch DSQL statements.
			</summary><returns><b>true</b> if there are more result sets; otherwise, <b>false</b>.</returns><remarks>
				<para>
				Used to process execution of batch DSQL statements.
				</para>
				<para>
				By default, the data reader is positioned on the first result.
				</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.Read">
            <summary>
			Advances the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> to the next record.
			</summary><returns><b>true</b> if there are more rows; otherwise, <b>false</b>.</returns><remarks>
				<para>
				The default position of the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> is prior to the first record. 
				Therefore, you must call <b>Read</b> to begin accessing any data.
				</para>
				<para>
				Only one <b>FbDataReader</b> per <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> can be open at a time, 
				and any attempt to open another will fail until the first one is closed. 
				Similarly, while the <b>FbDataReader</b> is in use, the associated <b>FbConnection</b> 
				is busy serving it until you close the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> by call 
				<see cref="M:FirebirdSql.Data.Firebird.FbDataReader.Close"/> method.
				</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetSchemaTable">
            <summary>
			Returns a DataTable that describes the column metadata of the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/>.
			</summary><returns>A DataTable that describes the column metadata.</returns><exception cref="T:System.InvalidOperationException">The <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> is closed.</exception><remarks>
				<list type="table">
					<listheader>
						<term>DataReader Column</term>
						<term>Description</term>
					</listheader>
					<item>
						<description>ColumnName</description>
						<description>
						The name of the column; this might not be unique. If this cannot be
						determined, a null value is returned. This name always reflects the
						most recent renaming of the column in the current view or command text.
						</description>
					</item>
					<item>
						<description>ColumnOrdinal</description>
						<description>
						The ordinal of the column. Columns are numbered starting with one. This column
						cannot contain a null value.
						</description>
					</item>
					<item>
						<description>ColumnSize</description>
						<description>
						The maximum possible length of a value in the column. For columns that
						use a fixed-length data type, this is the size of the data type.				
						</description>
					</item>
					<item>
						<description>NumericPrecision</description>
						<description>
						If ProviderType is a numeric data type, this is the maximum precision
						of the column. The precision depends on the definition of the column.
						If ProviderType is not a numeric data type, this is a null value.
						</description>
					</item>
					<item>
						<description>NumericScale</description>
						<description>
						If ProviderType is is DECIMAL or NUMERIC data type,
						the number of digits to the right of the decimal point. Otherwise, this
						is a null value.
						</description>
					</item>
					<item>
						<description>DataType</description>
						<description>Maps to the .NET Framework type of the column.</description>
					</item>
					<item>
						<description>ProviderType</description>
						<description>
						The indicator of the column's data type. If the data type of the column 
						varies from row to row, this must be Object. This column cannot contain a null value.
						</description>
					</item>
					<item>
						<description>IsLong</description>
						<description>
						<b>True</b> if the column contains a BLOB that contains
						very long data; otherwise <b>false</b>.
						</description>
					</item>
					<item>
						<description>AllowDbNull</description>
						<description>
						<b>True</b> if the column allows null values; otherwise <b>false</b>.
						</description>
					</item>
					<item>
						<description>IsReadOnly</description>
						<description><b>True</b> if the column cannot be modified; otherwise <b>false</b>.</description>
					</item>
					<item>
						<description>IsRowVersion</description>
						<description>
						Set if the column contains a persistent row identifier that cannot be written to, 
						and has no meaningful value except to identity the row.
						</description>
					</item>
					<item>
						<description>IsUnique</description>
						<description>
						<b>true</b> if the the column is one of a set of columns of a unique key.
						</description>
					</item>
					<item>
						<description>IsKey</description>
						<description>
						<b>true</b> if the the column is one of a set of columns of a primary key.
						</description>
					</item>
					<item>
						<description>IsAutoIncrement</description>
						<description>
						<b>true</b> if the column assigns values to new rows in fixed 
						increments; otherwise <b>false</b>. The default of this column is 
						<b>false</b>.
						</description>
					</item>
					<item>
						<description>IsAliased</description>
						<description>
						<b>True</b> if the column name is an alias; otherwise <b>false</b>.
						</description>
					</item>
					<item>
						<description>IsExpression</description>
						<description>
						<b>True</b> if the column is an expression; otherwise <b>false</b>.
						</description>
					</item>
					<item>
						<description>BaseSchemaName</description>
						<description>
						As Firebird doesn't support Schemas this column will be always <b>NULL</b>.
						</description>
					</item>
					<item>
						<description>BaseCatalogName</description>
						<description>
						As Firebird doesn't support Catalogs this column will be always <b>NULL</b>.
						</description>
					</item>
					<item>
						<description>BaseTableName</description>
						<description>
						The name of the table or view in the data store that contains the
						column. A null value if the base table name cannot be determined. The
						default of this column is a null value.
						</description>
					</item>
					<item>
						<description>BaseColumnName</description>
						<description>
						The name of the column in the data store. This might be different than
						the column name returned in the ColumnName column if an alias was used.
						A null value if the base column name cannot be determined or if the
						rowset column is derived, but not identical to, a column in the data
						store. The default of this column is a null value.
						</description>
					</item>
				</list>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetOrdinal(System.String)">
            <summary>
			Gets the column ordinal, given the name of the column.
			</summary><param name="name">The name of teh column.</param><returns>The zero-based column ordinal.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetName(System.Int32)">
            <summary>
			Gets the name of the specified column.
			</summary><param name="i">The zero-based column ordinal.</param><returns>The name of the column.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetDataTypeName(System.Int32)">
            <summary>
			Gets the name of the source data type.		
			</summary><param name="i">The zero-based column ordinal.</param><returns>The name of the back-end Data Type</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetFieldType(System.Int32)">
            <summary>
			Gets the Type that is the data type of the column.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The Type that is the data type of the object.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetValue(System.Int32)">
            <summary>
			Gets the value of the specified column in its native format.
			</summary><param name="i">The zero-based column ordinal.</param><returns>The value to return.</returns><remarks>
			This method returns null valus as DBNull.
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetValues(System.Object[])">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbDataReader.xml" path="doc/class[@name=&quot;FbDataReader&quot;]/method[@name=&quot;GetValues(System.Array)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetBoolean(System.Int32)">
            <summary>
			Gets the value of the specified column as a Boolean.
			</summary><param name="i">The zero-based column ordinal. </param><returns>A Boolean that is the value of the column.</returns><remarks>Call IsDBNull to check for null values before calling this method.</remarks><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetByte(System.Int32)">
            <summary>
			Gets the value of the specified column as a byte.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a byte.</returns><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
			Reads a stream of bytes from the specified column offset into the buffer as 
			an array, starting at the given buffer offset.
			</summary><param name="i">The zero-based column ordinal. </param><param name="dataIndex">The index within the field where the read operation is to begin.</param><param name="buffer">The buffer into which to read the stream of bytes.</param><param name="bufferIndex">The index where buffer is to begin the write operation.</param><param name="length">The number of bytes to read. </param><returns>The actual number of bytes read.</returns><remarks>
				<para>
				If you pass a buffer that is a null reference, <b>GetBytes</b> returns 
				the length of the field in bytes.
				</para>
				<para>
				No conversions are performed, therefore the data retrieved must already 
				be a byte array.
				</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetChar(System.Int32)">
            <summary>
			Gets the value of the specified column as a character.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a character.</returns><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
			Reads a stream of characters from the specified column offset into the 
			buffer as an array, starting at the given buffer offset.
			<seealso cref="M:FirebirdSql.Data.Firebird.FbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)"/>
			</summary><param name="i">The zero-based column ordinal. </param><param name="dataIndex">The index within the field where the read operation is to begin.</param><param name="buffer">The buffer into which to read the stream of bytes.</param><param name="bufferIndex">The index where buffer is to begin the write operation.</param><param name="length">The number of bytes to read. </param><returns>The actual number of characters read.</returns><remarks>
				<para>
				If you pass a buffer that is a null reference, <b>GetChars</b> returns 
				the length of the field in characters.
				</para>
				<para>
				No conversions are performed, therefore the data retrieved must already 
				be a character array.
				</para>
			</remarks>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetGuid(System.Int32)">
            <summary>
				<b>NOT SUPPORTED</b>
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a GUID.</returns><exception cref="T:System.NotSupportedException">Always.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetInt16(System.Int32)">
            <summary>
			Gets the value of the specified column as a 16-bit signed integer.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a 16-bit signed integer.</returns><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetInt32(System.Int32)">
            <summary>
			Gets the value of the specified column as a 32-bit signed integer.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a 32-bit signed integer.</returns><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetInt64(System.Int32)">
            <summary>
			Gets the value of the specified column as a 64-bit signed integer.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a 64-bit signed integer.</returns><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>		
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetFloat(System.Int32)">
            <summary>
			Gets the value of the specified column as a single-precision floating-point number.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a single-precision floating-point number.</returns><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetDouble(System.Int32)">
            <summary>
			Gets the value of the specified column as a double-precision floating point 
			number.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a double-precision floating point number.</returns><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetString(System.Int32)">
            <summary>
			Gets the value of the specified column as a string.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a string.</returns><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetDecimal(System.Int32)">
            <summary>
			Gets the value of the specified column as a Decimal object.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a Decimal object.</returns><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetDateTime(System.Int32)">
            <summary>
			Gets the value of the specified column as a DateTime object.
			</summary><param name="i">The zero-based column ordinal. </param><returns>The value of the specified column as a DateTime object.</returns><exception cref="T:System.InvalidCastException">The specified cast is not valid.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.GetData(System.Int32)">
            <summary>
				<b>NOT SUPPORTED.</b>
			</summary><param name="i">The zero-based column ordinal. </param><returns></returns><exception cref="T:System.NotSupportedException">Always.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.IsDBNull(System.Int32)">
            <summary>
			Gets a whether the column contains non-existent or missing values.
			</summary><param name="i">The zero-based column ordinal. </param><returns>true if the specified column value is equivalent to DBNull; otherwise, false.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbDataReader.System#Collections#IEnumerable#GetEnumerator">
            <summary>
			This member supports the .NET Framework infrastructure and is not intended to be 
			used directly from your code.
			</summary><returns>An <b>IEnumerator</b> that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataReader.Depth">
            <summary>
			Gets the depth of nesting for the current row.
			</summary><value>
			The depth of nesting for the current row.
			</value><remarks>
			The outermost table has a depth of zero. The Firebird .NET Data Provider 
			does not support nesting and always returns zero.
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataReader.IsClosed">
            <summary>
			Gets a value indicating whether the data reader is closed.
			</summary><value>    
			<b>True</b> if the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader">FbDataReader</see> is closed; otherwise, <b>false</b>.
			</value><remarks>
			<b>IsClosed</b> and <see cref="P:FirebirdSql.Data.Firebird.FbDataReader.RecordsAffected"/> 
			are the only properties that you can call after the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> is 
			closed.
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataReader.RecordsAffected">
            <summary>
			Gets the number of rows changed, inserted, or deleted by execution of the 
			DSQL statement.
			</summary><value>
			The number of rows changed, inserted, or deleted; 0 if no rows were affected 
			or the statement failed; and -1 for SELECT statements.
			</value><remarks>
				<para>
				The value of this property is cumulative. For example, if two records 
				are inserted in batch mode, the value of RecordsAffected will be two.
				</para>
				<para>
				<see cref="P:FirebirdSql.Data.Firebird.FbDataReader.IsClosed"/> and <b>RecordsAffected</b> are the only properties that you can call 
				after the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> is closed.
				</para>
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataReader.HasRows">
            <summary>
			Gets whether the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> contains one or more rows.
			</summary><remarks>This property returns always <b>true</b>.</remarks><value>
			<b>True</b> if the <see cref="T:FirebirdSql.Data.Firebird.FbDataReader"/> contains one or more rows; otherwise false.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataReader.Item(System.Int32)">
            <summary>
			Gets the value of the specified column in its native format given the column ordinal.
			</summary><param name="i">The zero-based column ordinal. </param><value>The value of the specified column in its native format.</value><exception cref="T:System.IndexOutOfRangeException">
			The index passed was outside the range of 0 through <see cref="P:FirebirdSql.Data.Firebird.FbDataReader.FieldCount"/>.
			</exception>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataReader.Item(System.String)">
            <summary>
			Gets the value of the specified column in its native format given the column name.
			</summary><param name="name">The column name.</param><value>The value of the specified column in its native format.</value><exception cref="T:System.IndexOutOfRangeException">No column with the specified name was found.</exception>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbDataReader.FieldCount">
            <summary>
			Gets the number of columns in the current row.
			</summary><value>
			When not positioned in a valid recordset, 0; otherwise the number of columns in the current row. The default is -1.
			</value><remarks>After executing a query that does not return rows, <b>FieldCount</b> returns 0.</remarks>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbDbSchemaType">
            <summary>
			Retrieves the the type of schema table that can be used with the <see cref="M:FirebirdSql.Data.Firebird.FbConnection.GetDbSchemaTable(FirebirdSql.Data.Firebird.FbDbSchemaType,System.Object[])"/> method.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.CharacterSets">
            <summary>
				<para>Retrieves the character sets defined in the database.</para>
				<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>CHARACTER_SET_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>CHARACTER_SET_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>CHARACTER_SET_NAME</description>
								<description>The name of the character set.</description>
								<description>2</description>
							</item>
							<item>
								<description>CHARACTER_SET_ID</description>
								<description>The id of the character set.</description>
								<description/>
							</item>
							<item>
								<description>DEFAULT_COLLATION</description>
								<description>The default collation of the character set.</description>
								<description/>
							</item>
							<item>
								<description>BYTES_PER_CHARACTER</description>
								<description>The number of bytes per character.</description>
								<description/>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The character set description</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.CheckConstraints">
            <summary>
				<para>Retrieves the check constraints defined in the database.</para>
				<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>CONSTRAINT_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>CONSTRAINT_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>CONSTRAINT_NAME</description>
								<description>The name of the constraint.</description>
								<description>2</description>
							</item>
							<item>
								<description>CHECK_CLAUSULE</description>
								<description>The chek clausule of the constraint.</description>
								<description/>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the check constraint</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.CheckConstraintsByTable">
            <summary>
				<para>Retrieves the check constraints, by table,defined in the database.</para>
				<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>CONSTRAINT_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>CONSTRAINT_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>CONSTRAINT_NAME</description>
								<description>The name of the constraint.</description>
								<description>2</description>
							</item>
							<item>
								<description>TABLE_NAME</description>
								<description>The name of the table.</description>
								<description/>
							</item>
							<item>
								<description>CHECK_CLAUSULE</description>
								<description>The clausule of the check constraint.</description>
								<description/>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the check constraint</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Collations">
            <summary>
				<para>Retrieves the collations defined in the database.</para>
				<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>COLLATION_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>COLLATION_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>COLLATION_NAME</description>
								<description>The name of the collation.</description>
								<description>1</description>
							</item>
							<item>
								<description>CHARACTER_SET_NAME</description>
								<description>The name of the character set.</description>
								<description/>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the collation.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Columns">
            <summary>
				<para>Retrieves the columns of tables ( including views ) defined in the database.</para>
				<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>TABLE_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>TABLE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>TABLE_NAME</description>
								<description>The name of the table.</description>
								<description>2</description>
							</item>
							<item>
								<description>COLUMN_NAME</description>
								<description>The name of the column.</description>
								<description>3</description>
							</item>
							<item>
								<description>COLUMN_DATA_TYPE</description>
								<description>The data type name of the column.</description>
								<description/>
							</item>
							<item>
								<description>COLUMN_SUB_TYPE</description>
								<description>The sub type of the column.</description>
								<description/>
							</item>
							<item>
								<description>COLUMN_SIZE</description>
								<description>The maximum possible length of a value in the column.</description>
								<description/>
							</item>
							<item>
								<description>NUMERIC_PRECISION</description>
								<description>The maximum precision of the column for numeric data types.</description>
								<description/>
							</item>
							<item>
								<description>NUMERIC_SCALE</description>
								<description>The maximum scale of the column for decimal and numeric data types.</description>
								<description/>
							</item>
							<item>
								<description>CHARACTER_OCTET_LENGTH</description>
								<description>For char and varchar columns the maximun number of bytes in the column.</description>
								<description/>
							</item>
							<item>
								<description>ORDINAL_POSITION</description>
								<description>The ordinal of the column.</description>
								<description/>
							</item>
							<item>
								<description>COLUMN_DEFAULT</description>
								<description>The default value of the column.</description>
								<description/>
							</item>
							<item>
								<description>IS_NULLABLE</description>
								<description><b>True</b> if the column allows null values; otherwise <b>false</b>.</description>
								<description/>
							</item>
							<item>
								<description>IS_READONLY</description>
								<description><b>True</b> if the column cannot be modified; otherwise <b>false</b>.</description>
								<description/>
							</item>
							<item>
								<description>IS_ARRAY</description>
								<description><b>True</b> if the column has array data type; otherwise <b>false</b>.</description>
								<description/>
							</item>
							<item>
								<description>CHARACTER_SET_NAME</description>
								<description>The caracter set name of the column.</description>
								<description/>
							</item>
							<item>
								<description>COLLATION_NAME</description>
								<description>The collation name of the column.</description>
								<description/>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>Column description.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.ColumnPrivileges">
            <summary>
			Retrieves the columns Privileges defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>TABLE_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>TABLE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>TABLE_NAME</description>
								<description>The name of the table.</description>
								<description>1</description>
							</item>
							<item>
								<description>COLUMN_NAME</description>
								<description>The name of the column.</description>
								<description>2</description>
							</item>
							<item>
								<description>GRANTEE</description>
								<description>User name to who the privilege has been granted.</description>
								<description/>
							</item>
							<item>
								<description>GRANTOR</description>
								<description>User who granted the privileges on the table.</description>
								<description/>
							</item>
							<item>
								<description>PRIVILEGE</description>
								<description>Privilege type.</description>
								<description/>
							</item>
							<item>
								<description>WITH_GRANT</description>
								<description>Privilege set with the grant option.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.DataTypes">
            <summary>
			Retrieves the data types supported by Firebird Server.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Domains">
            <summary>
			Retrieves the domains defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>DOMAIN_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>DOMAIN_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>DOMAIN_NAME</description>
								<description>The name of the domain.</description>
								<description>2</description>
							</item>
							<item>
								<description>DOMAIN_DATA_TYPE</description>
								<description>The data type name of the domain.</description>
								<description/>
							</item>
							<item>
								<description>DOMAIN_SUB_TYPE</description>
								<description>The sub type of the domain.</description>
								<description/>
							</item>
							<item>
								<description>DOMAIN_SIZE</description>
								<description>The maximum possible length of a value in the domain.</description>
								<description/>
							</item>
							<item>
								<description>NUMERIC_PRECISION</description>
								<description>The maximum precision of the domain for numeric data types.</description>
								<description/>
							</item>
							<item>
								<description>NUMERIC_SCALE</description>
								<description>The maximum scale of the domain for decimal and numeric data types.</description>
								<description/>
							</item>
							<item>
								<description>CHARACTER_OCTET_LENGTH</description>
								<description>For char and varchar columns the maximun number of bytes in the column.</description>
								<description/>
							</item>
							<item>
								<description>IS_NULLABLE</description>
								<description><b>True</b> if the domain allows null values; otherwise <b>false</b>.</description>
								<description/>
							</item>
							<item>
								<description>ARRAY_DIMENSIONS</description>
								<description>If the data type of the domain is an array type, the number of dimensions of the array.</description>
								<description/>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>Domain description.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.ForeignKeys">
            <summary>
			Retrieves the foreign keys defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>PK_TABLE_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>PK_TABLE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>PK_TABLE_NAME</description>
								<description>The name of the primary key table.</description>
								<description>2</description>
							</item>
                            <item>
                                <description>FK_TABLE_CATALOG</description>
                                <description/>
                                <description>3</description>
                            </item>
                            <item>
                                <description>FK_TABLE_SCHEMA</description>
                                <description/>
                                <description>4</description>
                            </item>
							<item>
								<description>FK_TABLE_NAME</description>
								<description>The name of the foreign key table.</description>
								<description>5</description>
							</item>
							<item>
								<description>PK_COLUMN_NAME</description>
								<description>The name of the primary key column.</description>
								<description/>
							</item>
							<item>
								<description>FK_COLUMN_NAME</description>
								<description>The name of the foreign key column.</description>
								<description/>
							</item>
							<item>
								<description>FK_NAME</description>
								<description>The name of the foreign key.</description>
								<description/>
							</item>
							<item>
								<description>ORDINAL_POSITION</description>
								<description>The ordinal of the column.</description>
								<description/>
							</item>
							<item>
								<description>MATCH_OPTION</description>
								<description/>
								<description/>
							</item>
							<item>
								<description>UPDATE_RULE</description>
								<description>Update rule.</description>
								<description/>
							</item>
							<item>
								<description>DELETE_RULE</description>
								<description>Delete rule.</description>
								<description/>
							</item>
							<item>
								<description>IS_DEFERRABLE</description>
								<description/>
								<description/>
							</item>
							<item>
								<description>DEFERRABLITY</description>
								<description/>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Functions">
            <summary>
			Retrieves the external Functions defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>FUNCTION_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>FUNCTION_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>FUNCTION_NAME</description>
								<description>The name of the function.</description>
								<description>2</description>
							</item>
							<item>
								<description>IS_SYSTEM_FUNCTION</description>
								<description>Indicates wheter the function is a system function.</description>
								<description>1</description>
							</item>
							<item>
								<description>FUNCTION_TYPE</description>
								<description>The type of the function.</description>
								<description/>
							</item>
							<item>
								<description>QUERY_NAME</description>
								<description/>
								<description/>
							</item>
							<item>
								<description>FUNCTION_MODULE_NAME</description>
								<description>The name of the function module.</description>
								<description/>
							</item>
							<item>
								<description>FUNCTION_ENTRY_POINT</description>
								<description>Entry point.</description>
								<description/>
							</item>
							<item>
								<description>RETURN_ARGUMENT</description>
								<description/>
								<description/>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the function.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Generators">
            <summary>
			Retrieves the generators defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>GENERATOR_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>GENERATOR_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>GENERATOR_NAME</description>
								<description>The name of the generator.</description>
								<description>2</description>
							</item>
							<item>
								<description>IS_SYSTEM_GENERATOR</description>
								<description>Indcates wheter the genaror is a system generator.</description>
								<description>1</description>
							</item>
							<item>
								<description>GENERATOR_ID</description>
								<description>The id of the generator.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Indexes">
            <summary>
			Retrieves the indexes defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>TABLE_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>TABLE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>TABLE_NAME</description>
								<description>The name of the table.</description>
								<description>2</description>
							</item>
							<item>
								<description>INDEX_NAME</description>
								<description>The name of the index.</description>
								<description>3</description>
							</item>
							<item>
								<description>INDEX_TYPE</description>
								<description>The type of the index</description>
								<description/>
							</item>
							<item>
								<description>COLUMN_NAME</description>
								<description>The name of the column.</description>
								<description/>
							</item>
							<item>
								<description>ORDINAL_POSITION</description>
								<description>The ordinal of the column.</description>
								<description/>
							</item>
							<item>
								<description>IS_INACTIVE</description>
								<description>Indicates wheter the index is inactive.</description>
								<description/>
							</item>
							<item>
								<description>IS_SYSTEM_INDEX</description>
								<description>Indicates wheter the index is a system index.</description>
								<description/>
							</item>
							<item>
								<description>IS_UNIQUE</description>
								<description>Indicates wheter the index is aunique index.</description>
								<description/>
							</item>
							<item>
								<description>INDEX_STATISTICS</description>
								<description>The statistics of the index.</description>
								<description/>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the index.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.MetaDataCollections">
            <summary>
			Retrieves the supported metadata collections (schemas).
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
							<item>
								<description>CollectionName</description>
								<description>Metadata collection name.</description>
								<description/>
							</item>
							<item>
								<description>NumberOfRestrictions</description>
								<description>Max number of restrictions allowed for the metadata collection.</description>
								<description/>
							</item>
							<item>
								<description>NumberOfIdentifierParts</description>
								<description>Max number of restrictions allowed for the metadata collection.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.PrimaryKeys">
            <summary>
			Retrieves the primary key columns defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
							<item>
								<description>TABLE_CATALOG</description>
                            </item>
							<item>
								<description>TABLE_SCHEMA</description>
                            </item>
							<item>
								<description>TABLE_NAME</description>
								<description>The name of the table.</description>
								<description>0</description>
							</item>
							<item>
								<description>COLUMN_NAME</description>
								<description>The name of the column.</description>
								<description/>
							</item>
							<item>
								<description>ORDINAL_POSITION</description>
								<description>The ordinal of the column.</description>
								<description/>
							</item>
							<item>
								<description>PK_NAME</description>
								<description>The name of the primary key.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.ProcedureParameters">
            <summary>
			Retrieves the parameters of stored procedures defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>PROCEDURE_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>PROCEDURE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>PROCEDURE_NAME</description>
								<description>The name of the stored procedure.</description>
								<description>2</description>
							</item>
							<item>
								<description>PARAMETER_NAME</description>
								<description>The of the stored procedure parameter</description>
								<description></description>
							</item>
							<item>
								<description>ORDINAL_POSITION</description>
								<description>The ordinal of the parameter.</description>
								<description></description>
							</item>
							<item>
								<description>PARAMETER_DIRECTION</description>
								<description>The direction of the stored procedure parameter (input/output)</description>
								<description></description>
							</item>
							<item>
								<description>PARAMETER_DATA_TYPE</description>
								<description>The data type name of the stored procedure parameter.</description>
								<description></description>
							</item>
							<item>
								<description>PARAMETER_SUB_TYPE</description>
								<description>The sub type of the stored procedure parameter.</description>
								<description></description>
							</item>
							<item>
								<description>PARAMETER_SIZE</description>
								<description>The maximum possible length of a value in the paremeter.</description>
								<description></description>
							</item>
							<item>
								<description>NUMERIC_PRECISION</description>
								<description>The maximum precision of the parameter for numeric data types.</description>
								<description></description>
							</item>
							<item>
								<description>NUMERIC_SCALE</description>
								<description>The maximum scale of the parameter for decimal and numeric data types.</description>
								<description></description>
							</item>
							<item>
								<description>CHARACTER_OCTET_LENGTH</description>
								<description>For char and varchar columns the maximun number of bytes in the column.</description>
								<description/>
							</item>
							<item>
								<description>CHARACTER_SET_NAME</description>
								<description>Character set of the parameter.</description>
								<description></description>
							</item>
							<item>
								<description>COLLATION_NAME</description>
								<description>Collation of the parameter.</description>
								<description></description>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the stored procedure parameter.</description>
								<description></description>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.ProcedurePrivileges">
            <summary>
			Retrieves the privileges of stored procedures defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>PROCEDURE_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>PROCEDURE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>PROCEDURE_NAME</description>
								<description>The name of the stored procedure.</description>
								<description>2</description>
							</item>
							<item>
								<description>GRANTEE</description>
								<description>User name to who the privilege has been granted.</description>
								<description/>
							</item>
							<item>
								<description>GRANTOR</description>
								<description>User who granted the privileges on the table.</description>
								<description/>
							</item>
							<item>
								<description>PRIVILEGE</description>
								<description>Privilege type.</description>
								<description/>
							</item>
							<item>
								<description>WITH_GRANT</description>
								<description>Privilege set with the grant option.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Procedures">
            <summary>
			Retrieves the stored procedures defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>PROCEDURE_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>PROCEDURE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>PROCEDURE_NAME</description>
								<description>The name of the stored procedure.</description>
								<description>2</description>
							</item>
							<item>
								<description>INPUTS</description>
								<description>The number of input parameters of the stored procedure.</description>
								<description/>
							</item>
							<item>
								<description>OUTPUTS</description>
								<description>The number of output parameters of the stored procedure.</description>
								<description/>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the stored procedure.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Restrictions">
            <summary>
			Retrieves the list of restrictions supported by each metadata collection.
			<para>
					<p>The list of returned columns for this collection is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
							<item>
								<description>RestrictionName</description>
								<description>Metadata collection name.</description>
								<description/>
							</item>
							<item>
								<description>RestrictionDefault</description>
								<description/>
								<description/>
							</item>
							<item>
								<description>RestrictionNumber</description>
								<description>Ordinal of the colelction srestriction.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Roles">
            <summary>
			Retrieves the user roles defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
							<item>
								<description>ROLE_NAME</description>
								<description>The name of the role.</description>
								<description>0</description>
							</item>
							<item>
								<description>OWNER</description>
								<description></description>
								<description></description>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.TableConstraints">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbDbSchemaType.xml" path="doc/enum[@name=&quot;FbDbSchemaType&quot;]/field[@name=&quot;TableConstraints&quot;]/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.TablePrivileges">
            <summary>
			Retrieves the table privileges defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>TABLE_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>TABLE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>TABLE_NAME</description>
								<description>The name of the table.</description>
								<description>2</description>
							</item>
							<item>
								<description>GRANTEE</description>
								<description>User name to who the privilege has been granted.</description>
								<description/>
							</item>
							<item>
								<description>GRANTOR</description>
								<description>User who granted the privileges on the table.</description>
								<description/>
							</item>
							<item>
								<description>PRIVILEGE</description>
								<description>Privilege type.</description>
								<description/>
							</item>
							<item>
								<description>WITH_GRANT</description>
								<description>Privilege set with the grant option.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Tables">
            <summary>
			Retrieves the tables defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>TABLE_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>TABLE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>TABLE_NAME</description>
								<description>The name of the table.</description>
								<description>2</description>
							</item>
							<item>
								<description>TABLE_TYPE</description>
								<description>The type of the table.</description>
								<description>3</description>
							</item>
							<item>
								<description>IS_SYSTEM_TABLE</description>
								<description>Indicates wheter the table is a system table.</description>
								<description/>
							</item>
							<item>
								<description>OWNER_NAME</description>
								<description></description>
								<description></description>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the table.</description>
								<description></description>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Triggers">
            <summary>
			Retrieves the triggers defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>TABLE_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>TABLE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>TABLE_NAME</description>
								<description>The name of the table.</description>
								<description>2</description>
							</item>
							<item>
								<description>TRIGGER_NAME</description>
								<description>The name of the trigger.</description>
								<description>3</description>
							</item>
							<item>
								<description>IS_SYSTEM_TRIGGER</description>
								<description>Indicates wheter the trigger is a system trigger.</description>
								<description/>
							</item>
							<item>
								<description>IS_INACTIVE</description>
								<description>Indicates wheter the trigger is inactive.</description>
								<description/>
							</item>
							<item>
								<description>SEQUENCE</description>
								<description>Execution sequence number.</description>
								<description></description>
							</item>
							<item>
								<description>SOURCE</description>
								<description>The source of the trigger.</description>
								<description></description>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the trigger.</description>
								<description></description>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.UniqueKeys">
            <summary>
			Retrieves the unique key columns defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>TABLE_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>TABLE_NAME</description>
								<description>The name of the table.</description>
								<description>2</description>
							</item>
							<item>
								<description>COLUMN_NAME</description>
								<description>The name of the column.</description>
								<description/>
							</item>
							<item>
								<description>ORDINAL_POSITION</description>
								<description>The ordinal of the column.</description>
								<description/>
							</item>
							<item>
								<description>UK_NAME</description>
								<description>The name of the unique key.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.ViewColumnUsage">
            <summary>
			Retrieves the view column usage information defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>VIEW_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>VIEW_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>VIEW_NAME</description>
								<description>The name of the view.</description>
								<description>2</description>
							</item>
							<item>
								<description>COLUMN_NAME</description>
								<description>The name of the column.</description>
								<description>3</description>
							</item>
							<item>
								<description>COLUMN_DATA_TYPE</description>
								<description>The data type name of the column.</description>
								<description/>
							</item>
							<item>
								<description>COLUMN_SUB_TYPE</description>
								<description>The sub type of the column.</description>
								<description/>
							</item>
							<item>
								<description>COLUMN_SIZE</description>
								<description>The maximum possible length of a value in the column.</description>
								<description/>
							</item>
							<item>
								<description>NUMERIC_PRECISION</description>
								<description>The maximum precision of the column for numeric data types.</description>
								<description/>
							</item>
							<item>
								<description>NUMERIC_SCALE</description>
								<description>The maximum scale of the column for decimal and numeric data types.</description>
								<description/>
							</item>
							<item>
								<description>CHARACTER_OCTET_LENGTH</description>
								<description>For char and varchar columns the maximun number of bytes in the column.</description>
								<description/>
							</item>
							<item>
								<description>ORDINAL_POSITION</description>
								<description>The ordinal of the column.</description>
								<description/>
							</item>
							<item>
								<description>COLUMN_DEFAULT</description>
								<description>The default value of the column.</description>
								<description/>
							</item>
							<item>
								<description>IS_ARRAY</description>
								<description><b>True</b> if the column has array data type; otherwise <b>false</b>.</description>
								<description/>
							</item>
							<item>
								<description>IS_NULLABLE</description>
								<description><b>True</b> if the column allows null values; otherwise <b>false</b>.</description>
								<description/>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the column.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.ViewPrivileges">
            <summary>
			Retrieves the view privileges defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>VIEW_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>VIEW_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>VIEW_NAME</description>
								<description>The name of the view.</description>
								<description>2</description>
							</item>
							<item>
								<description>GRANTEE</description>
								<description>User name to who the privilege has been granted.</description>
								<description/>
							</item>
							<item>
								<description>GRANTOR</description>
								<description>User who granted the privileges on the table.</description>
								<description/>
							</item>
							<item>
								<description>PRIVILEGE</description>
								<description>Privilege type.</description>
								<description/>
							</item>
							<item>
								<description>WITH_GRANT</description>
								<description>Privilege set with the grant option.</description>
								<description/>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbSchemaType.Views">
            <summary>
			Retrieves the views defined in the database.
			<para>
					<p>The list of returned columns for this schema type is:</p>
					<p>
						<list type="table">
							<listheader>
								<term>Column name</term>
								<term>Description</term>
								<term>*</term>
							</listheader>
                            <item>
                                <description>VIEW_CATALOG</description>
                                <description/>
                                <description>0</description>
                            </item>
                            <item>
                                <description>VIEW_SCHEMA</description>
                                <description/>
                                <description>1</description>
                            </item>
							<item>
								<description>VIEW_NAME</description>
								<description>The name of the view.</description>
								<description>2</description>
							</item>
							<item>
								<description>DEFINITION</description>
								<description>The SQL definition of the view.</description>
								<description></description>
							</item>
							<item>
								<description>DESCRIPTION</description>
								<description>The description of the view.</description>
								<description></description>
							</item>
						</list>
					</p>
				</para>
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbDbType">
            <summary>
			Specifies the data type of a field, property, or FbParameter.	
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Array">
            <summary>
			Array values. This maps to System.Array.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.BigInt">
            <summary>
			Exact numeric value (SQL_INT64). This maps to Int64.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Binary">
            <summary>
			A stream of binary data (SQL_BLOB). This maps to an Array of type Byte.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Char">
            <summary>
			A fixed-length character string (SQL_CHAR). This maps to String.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Date">
            <summary>
			Date data (SQL_TYPE_DATE). This maps to DateTime.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Decimal">
            <summary>
			Signed, exact, numeric value with a precision of at least p and scale s,
			The maximum precision is 18 (SQL_DECIMAL). This maps to Decimal.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Double">
            <summary>
			Signed, approximate, numeric value with a binary precision 53 (SQL_DOUBLE). 
			This maps to Double.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Float">
            <summary>
			Signed, approximate, numeric value with a binary precision 24 (SQL_FLOAT). 
			This maps to Single.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Guid">
            <summary>
				Globally unique identifier.
			</summary><remarks>
				Guid's should be used only with CHAR(16) fields with the OCTETS character set.
			</remarks>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Integer">
            <summary>
			Exact numeric value with precision 10 and scale 0 (SQL_LONG). This maps to Int32.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Numeric">
            <summary>
			Signed, exact, numeric value with a precision p and scale s (SQL_DECIMAL). This maps to Decimal.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.SmallInt">
            <summary>
			Exact numeric value with precision 5 and scale 0 (SQL_SHORT). This maps to Int16.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Text">
            <summary>
			Variable length character data. Maximum length is data source–dependent (SQL_TEXT). This maps to String.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.Time">
            <summary>
			Time data (SQL_TYPE_TIME). This maps to DateTime. 
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.TimeStamp">
            <summary>
			Date data (SQL_TIMESTAMP). This maps to DateTime.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbDbType.VarChar">
            <summary>
			A variable-length character string (SQL_TEXT). This maps to String.
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbError">
            <summary>
			Collects information relevant to a error returned by Firebird. 
			This class cannot be inherited.
			</summary><remarks>
				<para>
				This class is instantiated by the Firebird .NET Data Provider when an error occurs. 
				An instance of <b>FbError</b> is created and managed by the <see cref="T:FirebirdSql.Data.Firebird.FbException"/> class.
				</para>
			</remarks><example>
				<code>
public void DisplayFbErrors(FbException myException) 
{
    for (int i=0; i &lt; myException.Errors.Count; i++)
    {
       MessageBox.Show("Index #" + i + "\n" +
            "Error: " + myException.Errors[i].ToString() + "\n");
    }
}
				</code>
			</example>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbError.Class">
            <summary>
			Gets the severity level of the error returned from Firebird.
			</summary><value>
			A value from 1 to 25 that indicates the severity level of the error. The default is 0.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbError.LineNumber">
            <summary>
			Gets the line number within the DSQL command batch or stored procedure 
			that contains the error.
			</summary><value>
			The line number within the DSQL command batch or stored 
			procedure that contains the error.
			</value><remarks>
			Line numbering starts at 1. If the value is 0, the line number is not applicable.
			</remarks>		
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbError.Message">
            <summary>
			Gets the text describing the error.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbError.Number">
            <summary>
			Gets a number that identifies the type of error.
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbErrorCollection">
            <summary>
			Collects all errors generated by the Firebird .NET Data Provider. 
			This class cannot be inherited.
			</summary><remarks>
			This class is created by <see cref="T:FirebirdSql.Data.Firebird.FbException"/> to collect instances 
			of the <see cref="T:FirebirdSql.Data.Firebird.FbError"/> class. 
			<b>FbErrorCollection</b> always contains at least one instance of the <b>FbError</b> class.
			</remarks><example>
			The example display each <see cref="T:FirebirdSql.Data.Firebird.FbError"/> within the 
			<b>FbCollection</b> collection.
			<code>
public void DisplayFbErrors(FbException myException) 
{
	for (int i=0; i &lt; myException.Errors.Count; i++)
	{
	MessageBox.Show("Index #" + i + "\n" +
			"Error: " + myException.Errors[i].ToString() + "\n");
	}
}    
			</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbErrorCollection.CopyTo(System.Array,System.Int32)">
            <summary>
			Copies the elements of the <see cref="T:FirebirdSql.Data.Firebird.FbErrorCollection"/> collection into an <b>Array</b>, starting at the given index within the <b>Array</b>.
			</summary><param name="array">The <b>Array</b> to copy elements into.</param><param name="index">The index from which to start copying into the <i>array</i> parameter.</param><exception cref="T:System.ArgumentException">
			The sum of <i>index</i> and the number of elements in the <see cref="T:FirebirdSql.Data.Firebird.FbErrorCollection"/> collection is greater than 
			<b>Array</b>.    
			</exception><exception cref="T:System.ArgumentNullException">The <i>array</i> is a null reference.</exception><exception cref="T:System.ArgumentOutOfRangeException">The <i>index</i> is not valid for the <i>array</i>.</exception>	
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbErrorCollection.IndexOf(System.String)">
            <summary>
			Gets the location of the <see cref="T:FirebirdSql.Data.Firebird.FbError"/> in the collection with a specific error message.
			</summary><param name="errorMessage">The error message to retrieve.</param><returns>
			The zero-based location of the <see cref="T:FirebirdSql.Data.Firebird.FbError"/> in the collection.
			</returns>		
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbErrorCollection.Add(FirebirdSql.Data.Firebird.FbError)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbErrorCollection.xml" path="doc/class[@name=&quot;FbErrorCollection&quot;]/method[@name=&quot;Add(FbError)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbErrorCollection.Add(System.String,System.Int32)">
            <summary>
			Adds the specified <see cref="T:FirebirdSql.Data.Firebird.FbError"/> object to the collection.
			</summary><param name="errorMessage">Error message</param><param name="number">Error number</param><returns>A reference to the new <see cref="T:FirebirdSql.Data.Firebird.FbError"/> object.</returns>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbErrorCollection.Item(System.Int32)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbErrorCollection.xml" path="doc/class[@name=&quot;FbErrorCollection&quot;]/indexer[@name=&quot;Item(System.Int32)&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbErrorCollection.Count">
            <summary>
			Gets the number of <see cref="T:FirebirdSql.Data.Firebird.FbError"/> objects in the collection.
			</summary><value>The number of <see cref="T:FirebirdSql.Data.Firebird.FbError"/> objects in the collection.</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbException">
            <summary>
			The exception that is thrown when Firebird Server returns a warning or error. 
			This class cannot be inherited.
			</summary><remarks>
			<para>
			This class is created whenever the Firebird Server .NET Data Provider
			encounters an error generated from the server. 
			<b>FbException</b> always contains at least one instance of <see cref="T:FirebirdSql.Data.Firebird.FbError"/>.
			</para>
			</remarks><example>
				<code>
public void ThrowFbException() 
{
	string		 myConnString = "Database=C:\\PROGRAM FILES\\FIREBIRD\\EXAMPLES\\EMPLOYEE.GDB;User=SYSDBA;Password=masterkey;Dialect=3;Server=localhost";    
	FbConnection myConnection  = new FbConnection(myConnString);
	
	try 
	{
	myConnection.Open();
	}
	catch (FbException e) 
	{
	FbErrorCollection myErrors = e.Errors;
	    
	Console.WriteLine("Class: {1}", e.Class);
	Console.WriteLine("Error #{1}: {2} on line {3}.", e.Number, e.Message, e.LineNumber);
	Console.WriteLine("Error reported by {1} while connected to {2}", e.Source, e.Server);
	Console.WriteLine("Neither record was written to database.");
	Console.WriteLine("Errors collection contains:");

	for (int i=0; i &lt; myErrors.Errors.Count; i++) 
	{
		Console.WriteLine("Class: {1}", myErrors[i].Class);
		Console.WriteLine("Error #{1}: {2} on line {3}.", myErrors[i].Number, myErrors[i].Message, myErrors[i].LineNumber);
		Console.WriteLine("Error reported by {1} while connected to {2}", myErrors[i].Source, myErrors[i].Server);
	}
	}
}
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
			Sets the serialization information about the exception.
			</summary><param name="info">
			The SerializationInfo that holds the serialized object data about the exception being thrown.
			</param><param name="context">
			The StreamingContext that contains contextual information about the source or destination. 
			</param>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbException.Errors">
            <summary>
			Gets a collection of one or more <see cref="T:FirebirdSql.Data.Firebird.FbError"/> objects that give detailed 
			information about exceptions generated by the Firebird .NET Data Provider.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbException.ErrorCode">
            <summary>		
			Gets a value representing the Firebird error code
			</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbInfoMessageEventHandler">
            <summary>
			Represents the method that will handle the <see cref="E:FirebirdSql.Data.Firebird.FbConnection.InfoMessage"/>
			event of an <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/>.
			</summary><param name="sender">The source of the event.</param><param name="e">An <see cref="T:FirebirdSql.Data.Firebird.FbInfoMessageEventArgs"/>
			object that contains the event data.</param><remarks>
			When you create an <see cref="T:FirebirdSql.Data.Firebird.FbInfoMessageEventArgs"/> delegate, 
			you identify the method that will handle the event. To associate the 
			event with your event handler, add an instance of the delegate to the event. The 
			event handler is called whenever the event occurs, unless you remove the 
			delegate.
			</remarks>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbInfoMessageEventArgs">
            <summary>
			Provides data for the InfoMessage event. This class cannot be inherited.
			</summary><remarks>
			The InfoMessage event contains an <see cref="T:FirebirdSql.Data.Firebird.FbErrorCollection"/>
			collection with warnings messages sent from the Firebird Server.
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbInfoMessageEventArgs.Errors">
            <summary>Gets the collection of warnings sent from the Firebird Server.</summary><value>The collection of warnings sent from the Firebird Server.</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbInfoMessageEventArgs.Message">
            <summary>Gets a value representing the complete error message sent from the Firebird Server.</summary><value>Complete error message.</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbParameter">
            <summary>
			Represents a parameter of a <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/>, and optionally, its mapping to 
			DataSet columns. This class cannot be inherited.
			</summary><remarks>
			Parameter names are not case sensitive.
			</remarks><example>
				<code>
public void AddFbParameters() 
{
// ...
// create myDataSet and myDataAdapter
// ...

  myDataAdapter.SelectCommand.Parameters.Add("@CategoryName", FbDbType.VarChar, 80).Value = "toasters";
  myDataAdapter.SelectCommand.Parameters.Add("@SerialNum", FbDbType.Integer).Value = 239;
  myDataAdapter.Fill(myDataSet);

}
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameter.#ctor">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameter.xml" path="doc/class[@name=&quot;FbParameter&quot;]/constrctor[@name=&quot;ctor&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameter.#ctor(System.String,System.Object)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameter.xml" path="doc/class[@name=&quot;FbParameter&quot;]/constrctor[@name=&quot;ctor(System.String,System.Object)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameter.#ctor(System.String,FirebirdSql.Data.Firebird.FbDbType)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameter.xml" path="doc/class[@name=&quot;FbParameter&quot;]/constrctor[@name=&quot;ctor(System.String,FbDbType)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameter.#ctor(System.String,FirebirdSql.Data.Firebird.FbDbType,System.Int32)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameter.xml" path="doc/class[@name=&quot;FbParameter&quot;]/constrctor[@name=&quot;ctor(System.String,FbDbType,System.Int32)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameter.#ctor(System.String,FirebirdSql.Data.Firebird.FbDbType,System.Int32,System.String)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameter.xml" path="doc/class[@name=&quot;FbParameter&quot;]/constrctor[@name=&quot;ctor(System.String,FbDbType,System.Int32,System.String)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameter.#ctor(System.String,FirebirdSql.Data.Firebird.FbDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameter.xml" path="doc/class[@name=&quot;FbParameter&quot;]/constrctor[@name=&quot;ctor(System.String,FbDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameter.ToString">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbCommand.xml" path="doc/class[@name=&quot;FbParameter&quot;]/method[@name=&quot;ToString&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.ParameterName">
            <summary>
			Gets or sets the name of the <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/>.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.Precision">
            <summary>
			Gets or sets the maximum number of digits used to represent the parameter value.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.Scale">
            <summary>
			Gets or sets the number of decimal places to which parameter value is resolved.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.Size">
            <summary>
			Gets or sets the maximum size, in bytes, of the data within the column.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.DbType">
            <summary>
			Gets or sets the <b>DbType</b> of the parameter.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.FbDbType">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameter.xml" path="doc/class[@name=&quot;FbParameter&quot;]/property[@name=&quot;FbDbType&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.Direction">
            <summary>
			Gets or sets the <b>Direction</b> of the parameter.		
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.IsNullable">
            <summary>
			Gets or sets whether the parameter accepts null values.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.SourceColumn">
            <summary>
			Gets or sets the name of the source column that is mapped to the DataSet 
			and used for loading or returning the Value.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.SourceVersion">
            <summary>
			Gets or sets the <b>DataRowVersion</b> to use when loading value.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.Value">
            <summary>
			Gets or sets the value of the parameter.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameter.Charset">
            <summary>
			Gets or sets the <b>Charset</b> of the parameter.
			</summary><remarks>
			The Charset is used only with char and varcar parameters.
			</remarks>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbParameterCollection">
            <summary>
			A collection of parameters associated to a <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/>.
			This class cannot be inherited.
			</summary><remarks>
			The number of the parameters in the collection must be equal to the
			number of parameter placeholders and/or named parameters in the command text, 
			or Firebird will raise an exceptionraises an error.
			</remarks><example>
				<code>
public void AddFbParameters() 
{
// ...
// create myDataSet and myDataAdapter
// ...

myDataAdapter.SelectCommand.Parameters.Add("@CategoryName", FbDbType.VarChar, 80).Value = "toasters";
myDataAdapter.SelectCommand.Parameters.Add("@SerialNum", FbDbType.Integer).Value = 239;
myDataAdapter.Fill(myDataSet);

}	
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
			Copies <see cref="T:FirebirdSql.Data.Firebird.FbParameterCollection">FbParameterCollection</see> to the specified array.
			</summary><param name="array">The <b>Array</b> to copy elements into.</param><param name="index">The index from which to start copying into the <i>array</i> parameter.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Clear">
            <summary>
			Removes all items from the collection.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.GetEnumerator">
            <summary>
			This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Contains(System.Object)">
            <summary>
			Indicates whether a <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> exists in the collection.
			</summary><param name="value">A <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> object.</param><returns><b>True</b> if the collection contains the <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> object; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Contains(System.String)">
            <summary>
			Indicates whether a <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> exists in the collection.
			</summary><param name="parameterName">The name of the parameter to retrieve.</param><returns><b>True</b> if the collection contains the parameter; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.IndexOf(System.Object)">
            <summary>
			Gets the location of the <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> in the collection.
			</summary><param name="value">The <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> object to locate.</param><returns>
			The zero-based location of the <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> in the collection.
			</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.IndexOf(System.String)">
            <summary>
			Gets the location of the <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> in the collection with a specific parameter name.
			</summary><param name="parameterName">The name of the parameter to retrieve.</param><returns>
			The zero-based location of the <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> in the collection.
			</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Insert(System.Int32,System.Object)">
            <summary>
			Gets the location of the <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> in the collection.
			</summary><param name="index">The zero-based index within the collection to insert the <i>value</i> parameter.</param><param name="value">The <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> to add to the collection.</param><returns>
			The zero-based location of the <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> in the collection.
			</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Remove(System.Object)">
            <summary>
			Removes the specified <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> from the collection.
			</summary><param name="value">A <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> object to remove from the collection.</param><exception cref="T:System.InvalidCastException">The parameter is not a <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/>.</exception><exception cref="T:System.SystemException">The parameter does not exist in the collection.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.RemoveAt(System.Int32)">
            <summary>
			Removes the specified <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> from the collection using a specific index.
			</summary><param name="index">The zero-based index of the parameter.</param><exception cref="T:System.IndexOutOfRangeException">The specified index does not exist.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.RemoveAt(System.String)">
            <summary>
			Removes the specified <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> from the collection.
			</summary><param name="parameterName">The name of the parameter to remove.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Add(System.String,System.Object)">
            <summary>
			Adds a <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> to the <see cref="T:FirebirdSql.Data.Firebird.FbParameterCollection">FbParameterCollection</see> with the parameter name 
			and the data type.		
			</summary><param name="parameterName">The name of the parameter.</param><param name="value">The value of the parameter.</param><returns>A reference to the new <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> object.</returns>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Add(System.String,FirebirdSql.Data.Firebird.FbDbType)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameterCollection.xml" path="doc/class[@name=&quot;FbParameterCollection&quot;]/method[@name=&quot;Add(System.String,FbDbType)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Add(System.String,FirebirdSql.Data.Firebird.FbDbType,System.Int32)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameterCollection.xml" path="doc/class[@name=&quot;FbParameterCollection&quot;]/method[@name=&quot;Add(System.String,FbDbType,System.Int32)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Add(System.String,FirebirdSql.Data.Firebird.FbDbType,System.Int32,System.String)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameterCollection.xml" path="doc/class[@name=&quot;FbParameterCollection&quot;]/method[@name=&quot;Add(System.String,FbDbType,System.Int32,System.String)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Add(System.Object)">
            <summary>
			Adds the specified <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> object to the collection.
			</summary><param name="value">The <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> to be added.</param><returns>A reference to the new <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> object.</returns><exception cref="T:System.InvalidCastException">The parameter passed was not a <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/>.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbParameterCollection.Add(FirebirdSql.Data.Firebird.FbParameter)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbParameterCollection.xml" path="doc/class[@name=&quot;FbParameterCollection&quot;]/method[@name=&quot;Add(FbParameter)&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameterCollection.Item(System.String)">
            <summary>
			Gets or sets the <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> with the specified name.
			</summary><param name="parameterName">The name of the parameter to retrieve.</param>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameterCollection.Item(System.Int32)">
            <summary>
			Gets or sets the <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> at the specified index.
			</summary><param name="index">The zero-based index of the parameter to retrieve.</param>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbParameterCollection.Count">
            <summary>
			Gets the number of <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> objects in the collection.
			</summary><value>The number of <see cref="T:FirebirdSql.Data.Firebird.FbParameter"/> objects in the collection.</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbRemoteEvent">
            <summary>
			Represents a Firebird Event. This class cannot be inherited.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbRemoteEvent.#ctor(FirebirdSql.Data.Firebird.FbConnection)">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbRemoteEvent"/> class with the given <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> instance.
			</summary><param name="connection">A <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> instance.</param>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbRemoteEvent.#ctor(FirebirdSql.Data.Firebird.FbConnection,System.String[])">
            <summary>
			Creates a new instance of the <see cref="T:FirebirdSql.Data.Firebird.FbRemoteEvent"/> class with the given <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> instance and
			the given list of events.
			</summary><param name="connection">A <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> instance.</param><param name="events">List of requested events.</param><exception name="ArgumentException">If the event list count is greater than 15.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbRemoteEvent.AddEvents(System.String[])">
            <summary>
			Adds the specified events to the event list.
			</summary><remarks>
			If there are existent events in the list of requested events
			that will be lost.
			</remarks><param name="events">List of requested events.</param><exception name="ArgumentNullException">If the events parameter is null.</exception><exception name="ArgumentException">If the event list count is greater than 15.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbRemoteEvent.QueueEvents">
            <summary>
				Register interest in a set of events (works in asynchronous mode).
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbRemoteEvent.CancelEvents">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbRemoteEvent.xml" path="doc/class[@name=&quot;FbRemoteEvent&quot;]/method[@name=&quot;CancelEvents&quot;]/*"/>
        </member>
        <member name="E:FirebirdSql.Data.Firebird.FbRemoteEvent.RemoteEventCounts">
            <summary>
			Gets or sets the event handlers that will be fired each time the event counts notification is received from server.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbRemoteEvent.Item(System.Int32)">
            <summary>
			Gets the event name at the specified index.
			</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbRemoteEvent.Connection">
            <summary>Gets or sets the <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> associated to the remote event.</summary>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbRemoteEvent.HasChanges">
            <summary>Incates if there are changes in the event counts since the last time they were received.</summary>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbRemoteEventEventHandler">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbRemoteEventEventArgs.xml" path="doc/delegate[@name=&quot;FbRemoteEventEventHandler&quot;]/overview/*"/>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbRemoteEventEventArgs">
            <summary>
			Provides data for the RemoteEventCounts event. 
			This class cannot be inherited.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbRemoteEventEventArgs.#ctor(System.String,System.Int32)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbRemoteEventEventArgs.xml" path="doc/class[@name=&quot;FbRemoteEventEventArgs&quot;]/constructor[@name=&quot;ctor(System.String,System.Int32)&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbRemoteEventEventArgs.#ctor(System.String,System.Int32,System.Boolean)">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbRemoteEventEventArgs.xml" path="doc/class[@name=&quot;FbRemoteEventEventArgs&quot;]/constructor[@name=&quot;ctor(System.String,System.Int32,System.Boolean)&quot;]/*"/>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbRemoteEventEventArgs.Name">
            <summary>
			Gets the name of the remote event.
			</summary><value>
			The remote event name.
			</value>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbRemoteEventEventArgs.Counts">
            <summary>
			Gets the counts of the remote event.
			</summary><value>
			The remote event counts.
			</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbRowUpdatedEventHandler">
            <summary>
		Represents the method that will handle the RowUpdated event of an <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>.
		</summary><param name="sender">The source of the event.</param><param name="e">The <see cref="T:FirebirdSql.Data.Firebird.FbRowUpdatedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbRowUpdatedEventArgs">
            <summary>
			Provides data for the RowUpdated event. 
			This class cannot be inherited.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
			Initializes a new instance of the FbRowUpdatedEventArgs class.
			</summary><param name="row">The DataRow sent through an update operation. </param><param name="command">The <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> executed when Update is called. </param><param name="statementType">One of the System.Data.StatementType values that specifies the type of query executed. </param><param name="tableMapping">The System.Data.Common.DataTableMapping sent through Update.</param>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbRowUpdatedEventArgs.Command">
            <summary>
			Gets the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> executed when Update is called.
			</summary><value>
			The <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> executed when Update is called.
			</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbRowUpdatingEventHandler">
            <summary>
		Represents the method that will handle the RowUpdating event of an <see cref="T:FirebirdSql.Data.Firebird.FbDataAdapter"/>.
		</summary><param name="sender">The source of the event.</param><param name="e">The <see cref="T:FirebirdSql.Data.Firebird.FbRowUpdatingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbRowUpdatingEventArgs">
            <summary>
			Provides data for the RowUpdating event. 
			This class cannot be inherited.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
			Initializes a new instance of the FbRowUpdatingEventArgs class.
			</summary><param name="row">The DataRow sent through an update operation. </param><param name="command">The <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> executed when Update is called. </param><param name="statementType">One of the System.Data.StatementType values that specifies the type of query executed. </param><param name="tableMapping">The System.Data.Common.DataTableMapping sent through Update.</param>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbRowUpdatingEventArgs.Command">
            <summary>
			Gets the <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> executed when Update is called.
			</summary><value>
			The <see cref="T:FirebirdSql.Data.Firebird.FbCommand"/> executed when Update is called.
			</value>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbTransaction">
            <summary>
			Represents a Firebird transaction. This class cannot be inherited.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbTransaction.Finalize">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbTransaction.xml" path="doc/class[@name=&quot;FbCommandBuilder&quot;]/destructor[@name=&quot;Finalize&quot;]/*"/>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbTransaction.Dispose">
            <summary>
			Releases the unmanaged resources used by the <see cref="T:FirebirdSql.Data.Firebird.FbTransaction">FbTransaction</see> and optionally 
			releases the managed resources.
			</summary>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbTransaction.Commit">
            <summary>
			Commits the transaction.
			</summary><exception cref="T:FirebirdSql.Data.Firebird.FbException">An error occurred while trying to commit the transaction.</exception><exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception><exception cref="T:System.InvalidOperationException">FbCommand is currently busy Open, Fetching.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbTransaction.Rollback">
            <summary>
			Rolls back a transaction from a pending state.
			</summary><exception cref="T:FirebirdSql.Data.Firebird.FbException">An error occurred while trying to commit the transaction.</exception><exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception><exception cref="T:System.InvalidOperationException">FbCommand is currently busy Open, Fetching.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbTransaction.Save(System.String)">
            <summary>
			Establish a new Save point for the current transaction with the given name. 
			</summary><param name="savePointName">The savepoint name.</param><exception cref="T:FirebirdSql.Data.Firebird.FbException">An error occurred while trying to commit the transaction.</exception><exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception><exception cref="T:System.InvalidOperationException">FbCommand is currently busy Open, Fetching.</exception><remarks>
				<para>
				Savepoints offer a mechanism to roll back portions of transactions. You 
				create a savepoint using the <b>Save</b> method, and then later call the 
				<see cref="M:FirebirdSql.Data.Firebird.FbTransaction.Rollback(System.String)"/> method to roll back 
				to the savepoint instead of rolling back to the start of the transaction.
				</para>
			</remarks><example>
				<code>
FbConnection myConnection = new FbConnection(connectionString);
myConnection.Open();

FbCommand myCommand = new FbCommand();
FbTransaction myTrans;

// Start a local transaction
myTrans = myConnection.BeginTransaction();
// Assign transaction object for a pending local transaction
myCommand.Connection = myConnection;
myCommand.Transaction = myTrans;

try
{
	myCommand.CommandText = "INSERT INTO PROJECT(proj_id, proj_name, product) Values('FBNP', '.Net Provider', 'N/A')";
	myCommand.ExecuteNonQuery();
	myTrans.Save("SampleTransaction");
	myCommand.CommandText = "INSERT INTO PROJECT(proj_id, proj_name, product) Values('FBN1', '.Net Provider1.', 'N/A')";
	myCommand.ExecuteNonQuery();
	myTrans.Commit();
	Console.WriteLine("Both records are written to database.");
}
catch(Exception e)
{
	try
	{
		myTrans.Rollback("SampleTransaction");
	}
	catch (FbException ex)
	{
		if (myTrans.Connection != null)
		{
			Console.WriteLine("An exception of type " + ex.GetType() +
				" was encountered while attempting to roll back the transaction.");
		}
	}

	Console.WriteLine("An exception of type " + e.GetType() +
		" was encountered while inserting the data.");
	Console.WriteLine("Neither record was written to database.");
}
finally 
{
	myConnection.Close();
}		
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbTransaction.Commit(System.String)">
            <summary>
			Commits a transaction from a pending state, and specifies a savepoint name.
			</summary><param name="savePointName">The savepoint name to which commit changes.</param><exception cref="T:FirebirdSql.Data.Firebird.FbException">An error occurred while trying to commit the transaction.</exception><exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception><exception cref="T:System.InvalidOperationException">FbCommand is currently busy Open, Fetching.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbTransaction.Rollback(System.String)">
            <summary>
			Rolls back a transaction from a pending state, and specifies a savepoint name.
			</summary><param name="savePointName">The savepoint name to which rollback changes.</param><exception cref="T:FirebirdSql.Data.Firebird.FbException">An error occurred while trying to rollback the transaction.</exception><exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception><exception cref="T:System.InvalidOperationException">FbCommand is currently busy Open, Fetching.</exception><example>
				<code>
FbConnection myConnection = new FbConnection(connectionString);
myConnection.Open();

FbCommand myCommand = new FbCommand();
FbTransaction myTrans;

// Start a local transaction
myTrans = myConnection.BeginTransaction();
// Assign transaction object for a pending local transaction
myCommand.Connection = myConnection;
myCommand.Transaction = myTrans;

try
{
	myCommand.CommandText = "INSERT INTO PROJECT(proj_id, proj_name, product) Values('FBNP', '.Net Provider', 'N/A')";
	myCommand.ExecuteNonQuery();
	myTrans.Save("SampleTransaction");
	myCommand.CommandText = "INSERT INTO PROJECT(proj_id, proj_name, product) Values('FBN1', '.Net Provider1.', 'N/A')";
	myCommand.ExecuteNonQuery();
	myTrans.Commit();
	Console.WriteLine("Both records are written to database.");
}
catch(Exception e)
{
	try
	{
		myTrans.Rollback("SampleTransaction");
	}
	catch (FbException ex)
	{
		if (myTrans.Connection != null)
		{
			Console.WriteLine("An exception of type " + ex.GetType() +
				" was encountered while attempting to roll back the transaction.");
		}
	}

	Console.WriteLine("An exception of type " + e.GetType() +
		" was encountered while inserting the data.");
	Console.WriteLine("Neither record was written to database.");
}
finally 
{
	myConnection.Close();
}		
				</code>
			</example>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbTransaction.CommitRetaining">
            <summary>
			Commits the transaction and retains the transaction context after a commit.
			</summary><exception cref="T:FirebirdSql.Data.Firebird.FbException">An error occurred while trying to commit the transaction.</exception><exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception><exception cref="T:System.InvalidOperationException">FbCommand is currently busy Open, Fetching.</exception>
        </member>
        <member name="M:FirebirdSql.Data.Firebird.FbTransaction.RollbackRetaining">
            <summary>
			Rolls back a transaction from a pending state and retains the transaction context after the rollback.
			</summary><exception cref="T:System.ArgumentException">No transaction name was be specified.</exception><exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception><exception cref="T:System.InvalidOperationException">FbCommand is currently busy Open, Fetching.</exception>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbTransaction.Connection">
            <summary>
			Gets the <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> object associated with the transaction, or a null 
			reference if the transaction is no longer valid.
			</summary><value>
			The <see cref="T:FirebirdSql.Data.Firebird.FbConnection"/> object associated with the transaction.
			</value><remarks>
			A single application may have multiple database connections, each with or without 
			a transaction. This property allow you to know the connection object 
			associated with a specific transaction created by <see cref="M:FirebirdSql.Data.Firebird.FbConnection.BeginTransaction"/>.
			</remarks>
        </member>
        <member name="P:FirebirdSql.Data.Firebird.FbTransaction.IsolationLevel">
            <summary>
			Specifies the <b>IsolationLevel</b> for this transaction.
			</summary><value>The <b>IsolationLevel</b> for this transaction. The default is <b>ReadCommitted</b>.</value><remarks>
			Parallel transactions are not supported. Therefore, the <b>IsolationLevel</b> applies to the entire transaction.
			</remarks>
        </member>
        <member name="T:FirebirdSql.Data.Firebird.FbTransactionOptions">
            <summary>
			Specifies Firebird transactions specific options that can be used with
			<see cref="M:FirebirdSql.Data.Firebird.FbConnection.BeginTransaction">BeginTransaction</see>.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.Consistency">
            <summary>
			Table locking transaction model.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.Concurrency">
            <summary>
			High concurrency transaction with acceptable
			consistency. The use of this parameter takes full advantage
			multi-generational transaction model.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.Shared">
            <summary>
			Concurrent, shared access of a specified table among all transactions. 
			Used with LockRead and Lock Write options to establish the lock option.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.Protected">
            <summary>
			Concurrent, restricted access of a specified table.
			Used with LockRead and Lock Write options to establish the lock option.		
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.Exclusive">
            <summary>
			Exclusive access of a specified table.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.Wait">
            <summary>
			Lock resolution specifies that the transaction is to wait until locked
			resources are released before retrying an operation.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.NoWait">
            <summary>
			Lock resolution specifies that the transaction is not to wait for locks to be
			released, but instead, a lock conflict error should be returned immediately.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.Read">
            <summary>
			Read-only access mode that allows a transaction only to select data.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.Write">
            <summary>
			Read-write access mode of that allows a transaction to select, insert,
			update, and delete table data.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.LockRead">
            <summary>
			Read only access of a specified table. 
			Used with Shared, Protected and Exclusive options to establish the lock option.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.LockWrite">
            <summary>
			Read/write access of a specified table.
			Used with Shared, Protected and Exclusive options to establish the lock option.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.ReadCommitted">
            <summary>
			High throughput, high concurrency transaction that can read changes
			committed by other concurrent transactions. 
			The use of this parameter takes full advantage multi-generational transaction model.		
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.Autocommit">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbTransactionOptions.xml" path="doc/enum[@name=&quot;FbTransactionOptions&quot;]/field[@name=&quot;Autocommit&quot;]/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.RecVersion">
            <summary>
			Enables an ReadCommitted transaction to read the most recently
			committed version of a record even if other, uncommitted versions are
			pending.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.NoRecVersion">
            <summary>
			Enables an ReadCommitted transaction to read only the latest
			committed version of a record. If an uncommitted version of a record is
			pending and Wait is also specified, then the transaction waits for
			the pending record to be committed or rolled back before proceeding.
			Otherwise, a lock conflict error is reported at once.
			</summary>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.RestartRequests">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbTransactionOptions.xml" path="doc/enum[@name=&quot;FbTransactionOptions&quot;]/field[@name=&quot;RestartRequests&quot;]/*"/>
        </member>
        <member name="F:FirebirdSql.Data.Firebird.FbTransactionOptions.NoAutoUndo">
            <!-- No matching elements were found for the following include tag --><include file="Doc/en_EN/FbTransactionOptions.xml" path="doc/enum[@name=&quot;FbTransactionOptions&quot;]/field[@name=&quot;NoAutoUndo&quot;]/*"/>
        </member>
        <member name="T:FirebirdSql.WizardFramework.WizardSettings">
            <summary>
            Represents a set of	settings for a specific	Wizard instance.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardSettings.#ctor">
            <summary>
            Initializes	a new instance of the <b>WizardSettings</b>	class.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardSettings.Add(System.String)">
            <summary>
            Adds a new setting with	the	given name.
            </summary>
            <param name="name">The name	of the setting to be added.</param>
            <value>The value of	the	new	setting	will be	<b>null</b></value>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardSettings.Add(System.String,System.Object)">
            <summary>
            Adds a new setting with	the	given name and value.
            </summary>
            <param name="name">The name	of the setting to be added.</param>
            <param name="value">The	value of the setting to	be added.</param>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardSettings.Contains(System.String)">
            <summary>
            Determines wheter a	setting	is defined.
            </summary>
            <param name="name">The name	of the setting.</param>
            <returns><b>true</b> if	the	setting	is defined;	or <b>false</b>	if not.</returns>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardSettings.Item(System.String)">
            <summary>
            Gets or	sets the setting value with	the	specified name.
            </summary>
            <param name="name">Te name of the setting to retrieve.</param>
            <returns>The element with the specified	name.</returns>
        </member>
        <member name="T:FirebirdSql.WizardFramework.WizardSettingsManager">
            <summary>
            Manages	settings of	teh	Wizards.
            </summary>
        </member>
        <member name="F:FirebirdSql.WizardFramework.WizardSettingsManager.Instance">
            <summary>
            Singleton instance of the <see cref="T:FirebirdSql.WizardFramework.WizardSettingsManager"/>
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardSettingsManager.#ctor">
            <summary>
            Initializes	a new instance of the WizardSettingsManager	class
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardSettingsManager.RegisterSettings(System.String)">
            <summary>
            Regioster a	new	set	of settings	using the specified	name
            </summary>
            <param name="name">The settings	key	name.</param>
            <returns></returns>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardSettingsManager.GetSettings(System.String)">
            <summary>
            Returns	the	set	of settings	that matches the give name.
            </summary>
            <param name="name">The key name.</param>
            <returns>An	instance of	the	<see cref="T:FirebirdSql.WizardFramework.WizardSettings"/> class.</returns>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardSettingsManager.UnregisterSettings(System.String)">
            <summary>
            Unregister the set of keys that	matches	the	give name.
            </summary>
            <param name="name">The key name.</param>
        </member>
        <member name="T:FirebirdSql.WizardFramework.WizardStepCollection">
            <summary>
            Represents a collection	of Wizard Steps
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStepCollection.#ctor">
            <summary>
            Initializes	a new instance of the <b>WizardStepCollection</b> class.
            </summary>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStepCollection.Add(FirebirdSql.WizardFramework.WizardStep)">
            <summary>
            Adds a new stpe	to the collection
            </summary>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:FirebirdSql.WizardFramework.WizardStepCollection.IndexOf(FirebirdSql.WizardFramework.WizardStep)">
            <summary>
            Returns	the	zero-based index of	the	requested step.
            </summary>
            <param name="step">A <see cref="T:FirebirdSql.WizardFramework.WizardStep"/> object.</param>
            <returns>The zero-based	index of the requested step.</returns>
        </member>
        <member name="P:FirebirdSql.WizardFramework.WizardStepCollection.Item(System.Int32)">
            <summary>
            Gets the step at the specified index.
            </summary>
            <param name="index">The	zero-based index of	the	element	to get or set. </param>
            <returns>The element at	the	specified index</returns>
        </member>
    </members>
</doc>
